From ebb81c1a54aa0dee1ac28f356884bfd2835d9e9e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marek=20Marczykowski-G=C3=B3recki?=
 <marmarek@invisiblethingslab.com>
Date: Wed, 25 Dec 2019 00:50:22 +0100
Subject: [PATCH] Setup grubx64.efi directly as a bootloader

Skip shim - we don't support SecureBoot and also Fedora's shim has
hardcoded 'fedora' EFI vendor.
---
 pyanaconda/modules/storage/bootloader/efi.py | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/pyanaconda/modules/storage/bootloader/efi.py b/pyanaconda/modules/storage/bootloader/efi.py
index a44ace5d97..2ddc4c4809 100644
--- a/pyanaconda/modules/storage/bootloader/efi.py
+++ b/pyanaconda/modules/storage/bootloader/efi.py
@@ -146,8 +146,8 @@ class EFIBase(object):
 
 class EFIGRUB(EFIBase, GRUB2):
     """EFI GRUBv2"""
-    _packages32 = [ "grub2-efi-ia32", "shim-ia32" ]
-    _packages_common = ["efibootmgr", "grub2-tools", "grub2-tools-extra", "grubby" ]
+    _packages32 = [ "grub2-efi-ia32" ]
+    _packages_common = ["efibootmgr", "grub2-tools", "grub2-tools-extra" ]
     stage2_is_valid_stage1 = False
     stage2_bootable = False
 
@@ -155,7 +155,7 @@ class EFIGRUB(EFIBase, GRUB2):
 
     def __init__(self):
         super().__init__()
-        self._packages64 = [ "grub2-efi-x64", "shim-x64" ]
+        self._packages64 = [ "grub2-efi-x64" ]
 
         if self.get_fw_platform_size() == '32':
             self._is_32bit_firmware = True
@@ -163,8 +163,8 @@ class EFIGRUB(EFIBase, GRUB2):
     @property
     def _efi_binary(self):
         if self._is_32bit_firmware:
-            return "\\shimia32.efi"
-        return "\\shimx64.efi"
+            return "\\grubx32.efi"
+        return "\\grubx64.efi"
 
     @property
     def packages(self):
-- 
2.45.2

