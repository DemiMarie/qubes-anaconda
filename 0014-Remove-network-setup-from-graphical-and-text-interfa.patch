From 49b62be9ba23b3e0d326b8046f6ab61e2d35ab93 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Fr=C3=A9d=C3=A9ric=20Pierret=20=28fepitre=29?=
 <frederic.pierret@qubes-os.org>
Date: Sun, 15 Dec 2019 17:16:12 +0100
Subject: [PATCH] Remove network setup from graphical and text interfaces

---
 pyanaconda/ui/gui/spokes/network.glade | 2502 ------------------------
 pyanaconda/ui/gui/spokes/network.py    | 1669 ----------------
 pyanaconda/ui/tui/spokes/network.py    |  620 ------
 3 files changed, 4791 deletions(-)
 delete mode 100644 pyanaconda/ui/gui/spokes/network.glade
 delete mode 100644 pyanaconda/ui/gui/spokes/network.py
 delete mode 100644 pyanaconda/ui/tui/spokes/network.py

diff --git a/pyanaconda/ui/gui/spokes/network.glade b/pyanaconda/ui/gui/spokes/network.glade
deleted file mode 100644
index bdec50d00..000000000
--- a/pyanaconda/ui/gui/spokes/network.glade
+++ /dev/null
@@ -1,2502 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!-- Generated with glade 3.19.0 -->
-<interface>
-  <requires lib="gtk+" version="3.0"/>
-  <requires lib="AnacondaWidgets" version="1.0"/>
-  <object class="GtkListStore" id="liststore_add_device">
-    <columns>
-      <!-- column-name label -->
-      <column type="gchararray"/>
-      <!-- column-name type -->
-      <column type="gchararray"/>
-    </columns>
-    <data>
-      <row>
-        <col id="0" translatable="yes">Bond</col>
-        <col id="1">bond</col>
-      </row>
-      <row>
-        <col id="0" translatable="yes">Bridge</col>
-        <col id="1">bridge</col>
-      </row>
-      <row>
-        <col id="0" translatable="yes">Team</col>
-        <col id="1">team</col>
-      </row>
-      <row>
-        <col id="0" translatable="yes">VLAN</col>
-        <col id="1">vlan</col>
-      </row>
-    </data>
-  </object>
-  <object class="GtkDialog" id="add_device_dialog">
-    <property name="can_focus">False</property>
-    <property name="border_width">6</property>
-    <property name="title" translatable="yes">Add device</property>
-    <property name="modal">True</property>
-    <property name="type_hint">dialog</property>
-    <child internal-child="vbox">
-      <object class="GtkBox" id="dialog-vbox1">
-        <property name="can_focus">False</property>
-        <property name="orientation">vertical</property>
-        <property name="spacing">2</property>
-        <child internal-child="action_area">
-          <object class="GtkButtonBox" id="dialog-action_area1">
-            <property name="can_focus">False</property>
-            <property name="layout_style">end</property>
-            <child>
-              <object class="GtkButton" id="button_add_device_cancel">
-                <property name="label" translatable="yes" context="GUI|Network|Add Device Dialog">_Cancel</property>
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
-                <property name="receives_default">True</property>
-                <property name="use_underline">True</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">0</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkButton" id="button_add_device_create">
-                <property name="label" translatable="yes" context="GUI|Network|Add Device Dialog">_Add</property>
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
-                <property name="receives_default">True</property>
-                <property name="use_underline">True</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">1</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">True</property>
-            <property name="pack_type">end</property>
-            <property name="position">0</property>
-          </packing>
-        </child>
-        <child>
-          <object class="GtkBox" id="box1">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
-            <property name="orientation">vertical</property>
-            <child>
-              <object class="GtkLabel" id="label_add_device">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="label" translatable="yes" context="GUI|Network|Add Device Dialog">_Select the type of device you wish to add</property>
-                <property name="use_underline">True</property>
-                <property name="mnemonic_widget">combobox_add_device</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">0</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkComboBox" id="combobox_add_device">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="model">liststore_add_device</property>
-                <property name="active">0</property>
-                <child>
-                  <object class="GtkCellRendererText" id="cellrenderertext1"/>
-                  <attributes>
-                    <attribute name="text">0</attribute>
-                  </attributes>
-                </child>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">1</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">True</property>
-            <property name="position">1</property>
-          </packing>
-        </child>
-      </object>
-    </child>
-    <action-widgets>
-      <action-widget response="0">button_add_device_cancel</action-widget>
-      <action-widget response="1">button_add_device_create</action-widget>
-    </action-widgets>
-  </object>
-  <object class="GtkListStore" id="liststore_devices">
-    <columns>
-      <!-- column-name icon -->
-      <column type="gchararray"/>
-      <!-- column-name title -->
-      <column type="gchararray"/>
-      <!-- column-name sort -->
-      <column type="gchararray"/>
-      <!-- column-name object -->
-      <column type="PyObject"/>
-    </columns>
-  </object>
-  <object class="GtkListStore" id="liststore_wireless_network">
-    <columns>
-      <!-- column-name id -->
-      <column type="GObject"/>
-      <!-- column-name title -->
-      <column type="gchararray"/>
-      <!-- column-name sortable -->
-      <column type="gchararray"/>
-      <!-- column-name strength -->
-      <column type="guint"/>
-      <!-- column-name mode -->
-      <column type="guint"/>
-      <!-- column-name security -->
-      <column type="guint"/>
-    </columns>
-  </object>
-  <object class="AnacondaSpokeWindow" id="networkWindow">
-    <property name="can_focus">False</property>
-    <property name="window_name" translatable="yes">NETWORK &amp; HOST NAME</property>
-    <signal name="button-clicked" handler="on_back_clicked" swapped="no"/>
-    <child internal-child="main_box">
-      <object class="GtkBox" id="AnacondaSpokeWindow-main_box1">
-        <property name="can_focus">False</property>
-        <property name="orientation">vertical</property>
-        <child internal-child="nav_box">
-          <object class="GtkEventBox" id="AnacondaSpokeWindow-nav_box1">
-            <property name="can_focus">False</property>
-            <child internal-child="nav_area">
-              <object class="GtkGrid" id="AnacondaSpokeWindow-nav_area1">
-                <property name="can_focus">False</property>
-              </object>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">False</property>
-            <property name="position">0</property>
-          </packing>
-        </child>
-        <child internal-child="alignment">
-          <object class="GtkAlignment" id="AnacondaSpokeWindow-alignment1">
-            <property name="can_focus">False</property>
-            <property name="margin_top">12</property>
-            <property name="yalign">0</property>
-            <property name="bottom_padding">48</property>
-            <property name="left_padding">24</property>
-            <property name="right_padding">24</property>
-            <child internal-child="action_area">
-              <object class="GtkBox" id="networkWindow-actionArea">
-                <property name="can_focus">False</property>
-                <property name="orientation">vertical</property>
-                <property name="spacing">6</property>
-                <child>
-                  <object class="GtkLabel" id="live_hint_label">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="halign">start</property>
-                    <property name="label" translatable="yes">Please use the live desktop environment's tools for customizing your network configuration.  You can set the host name here.</property>
-                    <property name="ellipsize">start</property>
-                  </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">0</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkBox" id="networkControlBox_vbox">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="orientation">vertical</property>
-                    <property name="spacing">12</property>
-                    <child>
-                      <object class="GtkBox" id="network_config_vbox">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="orientation">vertical</property>
-                        <property name="spacing">3</property>
-                        <child>
-                          <object class="GtkBox" id="hbox2">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
-                            <property name="spacing">6</property>
-                            <child>
-                              <object class="GtkBox" id="vbox10">
-                                <property name="visible">True</property>
-                                <property name="can_focus">False</property>
-                                <property name="orientation">vertical</property>
-                                <child>
-                                  <object class="GtkScrolledWindow" id="devices_scrolledwindow">
-                                    <property name="visible">True</property>
-                                    <property name="can_focus">True</property>
-                                    <property name="shadow_type">in</property>
-                                    <property name="min_content_width">300</property>
-                                    <child>
-                                      <object class="GtkTreeView" id="treeview_devices">
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">True</property>
-                                        <property name="model">liststore_devices</property>
-                                        <property name="headers_visible">False</property>
-                                        <property name="search_column">2</property>
-                                        <property name="show_expanders">False</property>
-                                        <child internal-child="selection">
-                                          <object class="GtkTreeSelection" id="treeview-selection3"/>
-                                        </child>
-                                      </object>
-                                    </child>
-                                  </object>
-                                  <packing>
-                                    <property name="expand">True</property>
-                                    <property name="fill">True</property>
-                                    <property name="position">0</property>
-                                  </packing>
-                                </child>
-                                <child>
-                                  <object class="GtkToolbar" id="devices_toolbar">
-                                    <property name="visible">True</property>
-                                    <property name="can_focus">False</property>
-                                    <property name="toolbar_style">icons</property>
-                                    <property name="show_arrow">False</property>
-                                    <property name="icon_size">1</property>
-                                    <child>
-                                      <object class="GtkToolButton" id="add_toolbutton">
-                                        <property name="width_request">42</property>
-                                        <property name="height_request">36</property>
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">False</property>
-                                        <property name="use_underline">True</property>
-                                        <property name="icon_name">list-add-symbolic</property>
-                                      </object>
-                                      <packing>
-                                        <property name="expand">False</property>
-                                        <property name="homogeneous">True</property>
-                                      </packing>
-                                    </child>
-                                    <child>
-                                      <object class="GtkToolButton" id="remove_toolbutton">
-                                        <property name="width_request">42</property>
-                                        <property name="height_request">36</property>
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">False</property>
-                                        <property name="use_underline">True</property>
-                                        <property name="icon_name">list-remove-symbolic</property>
-                                      </object>
-                                      <packing>
-                                        <property name="expand">False</property>
-                                        <property name="homogeneous">True</property>
-                                      </packing>
-                                    </child>
-                                    <style>
-                                      <class name="inline-toolbar"/>
-                                    </style>
-                                  </object>
-                                  <packing>
-                                    <property name="expand">False</property>
-                                    <property name="fill">True</property>
-                                    <property name="position">1</property>
-                                  </packing>
-                                </child>
-                              </object>
-                              <packing>
-                                <property name="expand">True</property>
-                                <property name="fill">True</property>
-                                <property name="position">0</property>
-                              </packing>
-                            </child>
-                            <child>
-                              <object class="GtkNotebook" id="notebook_types">
-                                <property name="visible">True</property>
-                                <property name="can_focus">True</property>
-                                <property name="show_border">False</property>
-                                <child>
-                                  <object class="GtkBox" id="vbox6">
-                                    <property name="visible">True</property>
-                                    <property name="can_focus">False</property>
-                                    <property name="border_width">12</property>
-                                    <property name="orientation">vertical</property>
-                                    <property name="spacing">6</property>
-                                    <child>
-                                      <object class="GtkGrid" id="grid1">
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">False</property>
-                                        <property name="valign">start</property>
-                                        <property name="row_spacing">10</property>
-                                        <property name="column_spacing">6</property>
-                                        <child>
-                                          <object class="GtkImage" id="image_wired_device">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="halign">end</property>
-                                            <property name="valign">start</property>
-                                            <property name="xalign">1</property>
-                                            <property name="pixel_size">48</property>
-                                            <property name="icon_name">network-wired</property>
-                                            <property name="icon_size">6</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkBox" id="vbox4">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="valign">start</property>
-                                            <property name="hexpand">True</property>
-                                            <property name="orientation">vertical</property>
-                                            <property name="spacing">3</property>
-                                            <child>
-                                              <object class="GtkLabel" id="label_wired_device">
-                                                <property name="visible">True</property>
-                                                <property name="can_focus">False</property>
-                                                <property name="label">Wired</property>
-                                                <property name="ellipsize">end</property>
-                                                <property name="xalign">0</property>
-                                                <attributes>
-                                                  <attribute name="weight" value="bold"/>
-                                                  <attribute name="scale" value="1.2"/>
-                                                </attributes>
-                                              </object>
-                                              <packing>
-                                                <property name="expand">False</property>
-                                                <property name="fill">False</property>
-                                                <property name="position">0</property>
-                                              </packing>
-                                            </child>
-                                            <child>
-                                              <object class="GtkLabel" id="label_wired_status">
-                                                <property name="visible">True</property>
-                                                <property name="can_focus">False</property>
-                                                <property name="label">Cable unplugged</property>
-                                                <property name="xalign">0</property>
-                                              </object>
-                                              <packing>
-                                                <property name="expand">False</property>
-                                                <property name="fill">False</property>
-                                                <property name="position">1</property>
-                                              </packing>
-                                            </child>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkAlignment" id="alignment_wired_switch">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="halign">end</property>
-                                            <property name="valign">start</property>
-                                            <child>
-                                              <object class="GtkSwitch" id="device_wired_off_switch">
-                                                <property name="visible">True</property>
-                                                <property name="can_focus">True</property>
-                                                <property name="halign">end</property>
-                                                <property name="valign">start</property>
-                                              </object>
-                                            </child>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">2</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_wired_slaves">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">Slaves</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">1</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_wired_slaves">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">1</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_wired_dns">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">DNS</property>
-                                            <property name="xalign">1</property>
-                                            <property name="yalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">10</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_wired_dns">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">127.0.0.1</property>
-                                            <property name="wrap">True</property>
-                                            <property name="xalign">0</property>
-                                            <property name="yalign">0</property>
-                                            <property name="max_width_chars">2</property>
-                                            <property name="halign">start</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">10</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_wired_route">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">Default Route</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">9</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_wired_route">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">127.0.0.1</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">9</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_wired_ipv6">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">IPv6 Address</property>
-                                            <property name="yalign">0</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">7</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_wired_ipv6">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">::1</property>
-                                            <property name="wrap">True</property>
-                                            <property name="xalign">0</property>
-                                            <property name="max_width_chars">2</property>
-                                            <property name="halign">start</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">7</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_wired_ipv4">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">IPv4 Address</property>
-                                            <property name="xalign">1</property>
-                                            <property name="yalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">6</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_wired_ipv4">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">127.0.0.1</property>
-                                            <property name="xalign">0</property>
-                                            <property name="wrap">True</property>
-                                            <property name="max_width_chars">2</property>
-                                            <property name="halign">start</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">6</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_wired_speed">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">Speed</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">5</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_wired_speed">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">1 Mb/s</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">5</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_wired_mac">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">Hardware Address</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">4</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_wired_mac">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">AA:BB:CC:DD:55:66:77:88</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">4</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_wired_parent">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">Parent</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_wired_vlanid">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">VLAN ID</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">3</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_wired_parent">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">2</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_wired_vlanid">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">3</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                      </object>
-                                      <packing>
-                                        <property name="expand">False</property>
-                                        <property name="fill">True</property>
-                                        <property name="position">0</property>
-                                      </packing>
-                                    </child>
-                                    <child>
-                                      <object class="GtkGrid" id="alignment1">
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">False</property>
-                                        <property name="margin_top">12</property>
-                                        <property name="hexpand">True</property>
-                                        <property name="vexpand">True</property>
-                                        <child>
-                                          <object class="GtkButton" id="button_wired_options">
-                                            <property name="label" translatable="yes" context="GUI|Network|Wired">_Configure...</property>
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">True</property>
-                                            <property name="receives_default">True</property>
-                                            <property name="halign">end</property>
-                                            <property name="valign">end</property>
-                                            <property name="hexpand">True</property>
-                                            <property name="vexpand">True</property>
-                                            <property name="use_underline">True</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <placeholder/>
-                                        </child>
-                                      </object>
-                                      <packing>
-                                        <property name="expand">True</property>
-                                        <property name="fill">True</property>
-                                        <property name="position">1</property>
-                                      </packing>
-                                    </child>
-                                  </object>
-                                </child>
-                                <child type="tab">
-                                  <object class="GtkLabel" id="label5">
-                                    <property name="visible">True</property>
-                                    <property name="can_focus">False</property>
-                                    <property name="label">wired</property>
-                                  </object>
-                                  <packing>
-                                    <property name="tab_fill">False</property>
-                                  </packing>
-                                </child>
-                                <child>
-                                  <object class="GtkBox" id="vbox5">
-                                    <property name="visible">True</property>
-                                    <property name="can_focus">False</property>
-                                    <property name="border_width">12</property>
-                                    <property name="orientation">vertical</property>
-                                    <property name="spacing">6</property>
-                                    <child>
-                                      <object class="GtkGrid" id="grid2">
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">False</property>
-                                        <property name="valign">start</property>
-                                        <property name="row_spacing">10</property>
-                                        <property name="column_spacing">6</property>
-                                        <child>
-                                          <object class="GtkImage" id="image_wireless_device">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="halign">end</property>
-                                            <property name="valign">start</property>
-                                            <property name="xalign">1</property>
-                                            <property name="pixel_size">48</property>
-                                            <property name="icon_name">network-wireless</property>
-                                            <property name="icon_size">6</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkBox" id="vbox3">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="valign">start</property>
-                                            <property name="hexpand">True</property>
-                                            <property name="orientation">vertical</property>
-                                            <property name="spacing">3</property>
-                                            <child>
-                                              <object class="GtkLabel" id="label_wireless_device">
-                                                <property name="visible">True</property>
-                                                <property name="can_focus">False</property>
-                                                <property name="label">Wireless</property>
-                                                <property name="ellipsize">end</property>
-                                                <property name="xalign">0</property>
-                                                <attributes>
-                                                  <attribute name="weight" value="bold"/>
-                                                  <attribute name="scale" value="1.2"/>
-                                                </attributes>
-                                              </object>
-                                              <packing>
-                                                <property name="expand">False</property>
-                                                <property name="fill">False</property>
-                                                <property name="position">0</property>
-                                              </packing>
-                                            </child>
-                                            <child>
-                                              <object class="GtkLabel" id="label_wireless_status">
-                                                <property name="visible">True</property>
-                                                <property name="can_focus">False</property>
-                                                <property name="label">Not connected</property>
-                                                <property name="xalign">0</property>
-                                              </object>
-                                              <packing>
-                                                <property name="expand">False</property>
-                                                <property name="fill">False</property>
-                                                <property name="position">1</property>
-                                              </packing>
-                                            </child>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_wireless_mac">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">Hardware Address</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">1</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_wireless_speed">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">Speed</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_wireless_ipv4">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">IPv4 Address</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">5</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_wireless_ipv6">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">IPv6 Address</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">6</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_wireless_route">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">Default Route</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">7</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_wireless_dns">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">DNS</property>
-                                            <property name="xalign">1</property>
-                                            <property name="yalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">8</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_wireless_mac">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">AA:BB:CC:DD:55:66:77:88</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">1</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_wireless_speed">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">1 Mb/s</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">2</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_wireless_ipv4">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">127.0.0.1</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">5</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_wireless_ipv6">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">::1</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">6</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_wireless_route">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">127.0.0.1</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">7</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_wireless_dns">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">127.0.0.1</property>
-                                            <property name="wrap">True</property>
-                                            <property name="xalign">0</property>
-                                            <property name="yalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">8</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkAlignment" id="alignment_wireless_switch">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="halign">end</property>
-                                            <property name="valign">start</property>
-                                            <child>
-                                              <object class="GtkSwitch" id="device_wireless_off_switch">
-                                                <property name="visible">True</property>
-                                                <property name="can_focus">True</property>
-                                                <property name="halign">end</property>
-                                                <property name="valign">start</property>
-                                              </object>
-                                            </child>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">2</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_wireless_security">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">Security</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">3</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_wireless_network_name">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes" context="GUI|Network|Wireless">_Network Name</property>
-                                            <property name="use_underline">True</property>
-                                            <property name="mnemonic_widget">combobox_wireless_network_name</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">4</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_hotspot_network_name">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">Network Name</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">9</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_hotspot_security_key">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">Security Key</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">10</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_wireless_security">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">WPA</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">3</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkComboBox" id="combobox_wireless_network_name">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="model">liststore_wireless_network</property>
-                                            <property name="has_entry">True</property>
-                                            <property name="entry_text_column">1</property>
-                                            <child internal-child="entry">
-                                              <object class="GtkEntry" id="combobox-entry4">
-                                                <property name="can_focus">False</property>
-                                              </object>
-                                            </child>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">4</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_hotspot_network_name">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">My Hot Spot</property>
-                                            <property name="selectable">True</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">9</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_hotspot_security_key">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">My Secret</property>
-                                            <property name="selectable">True</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">10</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                      </object>
-                                      <packing>
-                                        <property name="expand">False</property>
-                                        <property name="fill">True</property>
-                                        <property name="position">0</property>
-                                      </packing>
-                                    </child>
-                                    <child>
-                                      <object class="GtkGrid" id="alignment2">
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">False</property>
-                                        <property name="margin_top">12</property>
-                                        <property name="hexpand">True</property>
-                                        <property name="vexpand">True</property>
-                                        <child>
-                                          <object class="GtkButton" id="start_hotspot_button">
-                                            <property name="label" translatable="yes" context="GUI|Network|Wireless">_Use as Hotspot...</property>
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">True</property>
-                                            <property name="receives_default">True</property>
-                                            <property name="halign">start</property>
-                                            <property name="valign">end</property>
-                                            <property name="hexpand">True</property>
-                                            <property name="vexpand">True</property>
-                                            <property name="use_underline">True</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkButton" id="stop_hotspot_button">
-                                            <property name="label" translatable="yes" context="GUI|Network|Wireless">_Stop Hotspot...</property>
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">True</property>
-                                            <property name="receives_default">True</property>
-                                            <property name="halign">start</property>
-                                            <property name="valign">end</property>
-                                            <property name="hexpand">True</property>
-                                            <property name="vexpand">True</property>
-                                            <property name="use_underline">True</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkButton" id="button_wireless_options">
-                                            <property name="label" translatable="yes" context="GUI|Network|Wireless">_Configure...</property>
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">True</property>
-                                            <property name="receives_default">True</property>
-                                            <property name="halign">end</property>
-                                            <property name="valign">end</property>
-                                            <property name="hexpand">True</property>
-                                            <property name="vexpand">True</property>
-                                            <property name="use_underline">True</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">2</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                      </object>
-                                      <packing>
-                                        <property name="expand">True</property>
-                                        <property name="fill">True</property>
-                                        <property name="pack_type">end</property>
-                                        <property name="position">1</property>
-                                      </packing>
-                                    </child>
-                                  </object>
-                                  <packing>
-                                    <property name="position">1</property>
-                                  </packing>
-                                </child>
-                                <child type="tab">
-                                  <object class="GtkLabel" id="label16">
-                                    <property name="visible">True</property>
-                                    <property name="can_focus">False</property>
-                                    <property name="label">wireless</property>
-                                  </object>
-                                  <packing>
-                                    <property name="position">1</property>
-                                    <property name="tab_fill">False</property>
-                                  </packing>
-                                </child>
-                                <child>
-                                  <object class="GtkBox" id="vbox7">
-                                    <property name="visible">True</property>
-                                    <property name="can_focus">False</property>
-                                    <property name="border_width">12</property>
-                                    <property name="orientation">vertical</property>
-                                    <property name="spacing">6</property>
-                                    <child>
-                                      <object class="GtkGrid" id="grid3">
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">False</property>
-                                        <property name="valign">start</property>
-                                        <property name="row_spacing">10</property>
-                                        <property name="column_spacing">6</property>
-                                        <child>
-                                          <object class="GtkImage" id="image_mobilebb_device">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="halign">end</property>
-                                            <property name="valign">start</property>
-                                            <property name="xalign">1</property>
-                                            <property name="pixel_size">48</property>
-                                            <property name="icon_name">network-cellular-connected-symbolic</property>
-                                            <property name="icon_size">6</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkBox" id="vbox11">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="valign">start</property>
-                                            <property name="hexpand">True</property>
-                                            <property name="orientation">vertical</property>
-                                            <property name="spacing">3</property>
-                                            <child>
-                                              <object class="GtkLabel" id="label_mobilebb_device">
-                                                <property name="visible">True</property>
-                                                <property name="can_focus">False</property>
-                                                <property name="label">Mobile Broadband</property>
-                                                <property name="ellipsize">end</property>
-                                                <property name="xalign">0</property>
-                                                <attributes>
-                                                  <attribute name="weight" value="bold"/>
-                                                  <attribute name="scale" value="1.2"/>
-                                                </attributes>
-                                              </object>
-                                              <packing>
-                                                <property name="expand">False</property>
-                                                <property name="fill">False</property>
-                                                <property name="position">0</property>
-                                              </packing>
-                                            </child>
-                                            <child>
-                                              <object class="GtkLabel" id="label_mobilebb_status">
-                                                <property name="visible">True</property>
-                                                <property name="can_focus">False</property>
-                                                <property name="label">Not connected</property>
-                                                <property name="xalign">0</property>
-                                              </object>
-                                              <packing>
-                                                <property name="expand">False</property>
-                                                <property name="fill">False</property>
-                                                <property name="position">1</property>
-                                              </packing>
-                                            </child>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_mobilebb_imei">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">IMEI</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">1</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_mobilebb_speed">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">Speed</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_mobilebb_provider">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">Provider</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">3</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_mobilebb_imei">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">1234567890</property>
-                                            <property name="selectable">True</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">1</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_mobilebb_speed">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">1 Mb/s</property>
-                                            <property name="selectable">True</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">2</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_mobilebb_provider">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">SuperTel Supremo	</property>
-                                            <property name="selectable">True</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">3</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_mobilebb_ipv4">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">127.0.0.1</property>
-                                            <property name="selectable">True</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">4</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_mobilebb_ipv6">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="selectable">True</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">5</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_mobilebb_route">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="selectable">True</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">6</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_mobilebb_dns">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="selectable">True</property>
-                                            <property name="xalign">0</property>
-                                            <property name="yalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">7</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkAlignment" id="alignment_mobilebb_switch">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="halign">end</property>
-                                            <property name="valign">start</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">2</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_mobilebb_ipv4">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">IP Address</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">4</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_mobilebb_ipv6">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">IPv6 Address</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">5</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_mobilebb_route">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">Default Route</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">6</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_mobilebb_dns">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">DNS</property>
-                                            <property name="xalign">1</property>
-                                            <property name="yalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">7</property>
-                                          </packing>
-                                        </child>
-                                      </object>
-                                      <packing>
-                                        <property name="expand">False</property>
-                                        <property name="fill">True</property>
-                                        <property name="position">0</property>
-                                      </packing>
-                                    </child>
-                                    <child>
-                                      <object class="GtkAlignment" id="alignment3">
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">False</property>
-                                        <property name="xalign">1</property>
-                                        <property name="yalign">1</property>
-                                        <property name="xscale">0</property>
-                                        <property name="yscale">0</property>
-                                        <property name="top_padding">12</property>
-                                        <child>
-                                          <object class="GtkButton" id="button_mobilebb_options">
-                                            <property name="label" translatable="yes" context="GUI|Network|Mobile Broadband">_Configure...</property>
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">True</property>
-                                            <property name="receives_default">True</property>
-                                            <property name="use_underline">True</property>
-                                          </object>
-                                        </child>
-                                      </object>
-                                      <packing>
-                                        <property name="expand">True</property>
-                                        <property name="fill">True</property>
-                                        <property name="pack_type">end</property>
-                                        <property name="position">1</property>
-                                      </packing>
-                                    </child>
-                                  </object>
-                                  <packing>
-                                    <property name="position">2</property>
-                                  </packing>
-                                </child>
-                                <child type="tab">
-                                  <object class="GtkLabel" id="label17">
-                                    <property name="visible">True</property>
-                                    <property name="can_focus">False</property>
-                                    <property name="label">mobilebb</property>
-                                  </object>
-                                  <packing>
-                                    <property name="position">2</property>
-                                    <property name="tab_fill">False</property>
-                                  </packing>
-                                </child>
-                                <child>
-                                  <object class="GtkBox" id="vbox9">
-                                    <property name="visible">True</property>
-                                    <property name="can_focus">False</property>
-                                    <property name="border_width">12</property>
-                                    <property name="orientation">vertical</property>
-                                    <property name="spacing">6</property>
-                                    <child>
-                                      <object class="GtkGrid" id="grid4">
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">False</property>
-                                        <property name="valign">start</property>
-                                        <property name="row_spacing">10</property>
-                                        <property name="column_spacing">6</property>
-                                        <child>
-                                          <object class="GtkImage" id="image_vpn_device">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="halign">end</property>
-                                            <property name="valign">start</property>
-                                            <property name="xalign">1</property>
-                                            <property name="pixel_size">48</property>
-                                            <property name="icon_name">network-vpn</property>
-                                            <property name="icon_size">6</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkBox" id="vbox12">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="valign">start</property>
-                                            <property name="hexpand">True</property>
-                                            <property name="orientation">vertical</property>
-                                            <property name="spacing">3</property>
-                                            <child>
-                                              <object class="GtkLabel" id="label_vpn_device">
-                                                <property name="visible">True</property>
-                                                <property name="can_focus">False</property>
-                                                <property name="label">VPN</property>
-                                                <property name="ellipsize">end</property>
-                                                <property name="xalign">0</property>
-                                                <attributes>
-                                                  <attribute name="weight" value="bold"/>
-                                                  <attribute name="scale" value="1.2"/>
-                                                </attributes>
-                                              </object>
-                                              <packing>
-                                                <property name="expand">False</property>
-                                                <property name="fill">False</property>
-                                                <property name="position">0</property>
-                                              </packing>
-                                            </child>
-                                            <child>
-                                              <object class="GtkLabel" id="label_vpn_status">
-                                                <property name="visible">True</property>
-                                                <property name="can_focus">False</property>
-                                                <property name="label">Not connected</property>
-                                                <property name="xalign">0</property>
-                                              </object>
-                                              <packing>
-                                                <property name="expand">False</property>
-                                                <property name="fill">False</property>
-                                                <property name="position">1</property>
-                                              </packing>
-                                            </child>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_vpn_service_type">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">VPN Type</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">1</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_vpn_gateway">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">Gateway</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_vpn_group_name">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">Group Name</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">3</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_vpn_group_password">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">Group Password</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">4</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_vpn_username">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes">User Name</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">5</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_vpn_service_type">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">openvpn</property>
-                                            <property name="selectable">True</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">1</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_vpn_gateway">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">AA:BB:CC:DD:55:66:77:88</property>
-                                            <property name="selectable">True</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">2</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_vpn_group_name">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">SEKRIT</property>
-                                            <property name="selectable">True</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">3</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_vpn_group_password">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">**********</property>
-                                            <property name="selectable">True</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">4</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_vpn_username">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">smithy</property>
-                                            <property name="selectable">True</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">5</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkAlignment" id="alignment_vpn_switch">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="halign">end</property>
-                                            <property name="valign">start</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">2</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                      </object>
-                                      <packing>
-                                        <property name="expand">False</property>
-                                        <property name="fill">True</property>
-                                        <property name="position">0</property>
-                                      </packing>
-                                    </child>
-                                    <child>
-                                      <object class="GtkAlignment" id="alignment4">
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">False</property>
-                                        <property name="xalign">1</property>
-                                        <property name="yalign">1</property>
-                                        <property name="xscale">0</property>
-                                        <property name="yscale">0</property>
-                                        <property name="top_padding">12</property>
-                                        <child>
-                                          <object class="GtkButton" id="button_vpn_options">
-                                            <property name="label" translatable="yes" context="GUI|Network|VPN">_Configure...</property>
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">True</property>
-                                            <property name="receives_default">True</property>
-                                            <property name="use_underline">True</property>
-                                          </object>
-                                        </child>
-                                      </object>
-                                      <packing>
-                                        <property name="expand">True</property>
-                                        <property name="fill">True</property>
-                                        <property name="pack_type">end</property>
-                                        <property name="position">1</property>
-                                      </packing>
-                                    </child>
-                                  </object>
-                                  <packing>
-                                    <property name="position">3</property>
-                                  </packing>
-                                </child>
-                                <child type="tab">
-                                  <object class="GtkLabel" id="label55">
-                                    <property name="visible">True</property>
-                                    <property name="can_focus">False</property>
-                                    <property name="label">vpn</property>
-                                  </object>
-                                  <packing>
-                                    <property name="position">3</property>
-                                    <property name="tab_fill">False</property>
-                                  </packing>
-                                </child>
-                                <child>
-                                  <object class="GtkBox" id="vbox8">
-                                    <property name="visible">True</property>
-                                    <property name="can_focus">False</property>
-                                    <property name="border_width">12</property>
-                                    <property name="orientation">vertical</property>
-                                    <property name="spacing">6</property>
-                                    <child>
-                                      <object class="GtkGrid" id="grid5">
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">False</property>
-                                        <property name="valign">start</property>
-                                        <property name="row_spacing">10</property>
-                                        <property name="column_spacing">6</property>
-                                        <child>
-                                          <object class="GtkImage" id="image_proxy_device">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="halign">end</property>
-                                            <property name="valign">start</property>
-                                            <property name="xalign">1</property>
-                                            <property name="pixel_size">48</property>
-                                            <property name="icon_name">preferences-system-network</property>
-                                            <property name="icon_size">6</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkBox" id="vbox13">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="valign">start</property>
-                                            <property name="hexpand">True</property>
-                                            <property name="orientation">vertical</property>
-                                            <property name="spacing">3</property>
-                                            <child>
-                                              <object class="GtkLabel" id="label_proxy_device">
-                                                <property name="visible">True</property>
-                                                <property name="can_focus">False</property>
-                                                <property name="label">Proxy</property>
-                                                <property name="ellipsize">end</property>
-                                                <property name="xalign">0</property>
-                                                <attributes>
-                                                  <attribute name="weight" value="bold"/>
-                                                  <attribute name="scale" value="1.2"/>
-                                                </attributes>
-                                              </object>
-                                              <packing>
-                                                <property name="expand">False</property>
-                                                <property name="fill">False</property>
-                                                <property name="position">0</property>
-                                              </packing>
-                                            </child>
-                                            <child>
-                                              <object class="GtkLabel" id="label_proxy_status">
-                                                <property name="visible">True</property>
-                                                <property name="can_focus">False</property>
-                                                <property name="label">Not connected</property>
-                                                <property name="xalign">0</property>
-                                              </object>
-                                              <packing>
-                                                <property name="expand">False</property>
-                                                <property name="fill">False</property>
-                                                <property name="position">1</property>
-                                              </packing>
-                                            </child>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkAlignment" id="alignment_proxy_switch">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="halign">end</property>
-                                            <property name="valign">start</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">2</property>
-                                            <property name="top_attach">0</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_proxy_method">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes" context="GUI|Network|Proxy">_Method</property>
-                                            <property name="use_underline">True</property>
-                                            <property name="mnemonic_widget">combobox_proxy_mode</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">1</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkComboBoxText" id="combobox_proxy_mode">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">True</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">1</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_proxy_url">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes" context="GUI|Network|Proxy">_Configuration URL</property>
-                                            <property name="use_underline">True</property>
-                                            <property name="mnemonic_widget">entry_proxy_url</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkEntry" id="entry_proxy_url">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">True</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">2</property>
-                                            <property name="width">2</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_proxy_http">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes" context="GUI|Network|Proxy">HTTP _Proxy</property>
-                                            <property name="use_underline">True</property>
-                                            <property name="mnemonic_widget">entry_proxy_http</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">3</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_proxy_https">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes" context="GUI|Network|Proxy">H_TTPS Proxy</property>
-                                            <property name="use_underline">True</property>
-                                            <property name="mnemonic_widget">entry_proxy_https</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">4</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_proxy_ftp">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes" context="GUI|Network|Proxy">_FTP Proxy</property>
-                                            <property name="use_underline">True</property>
-                                            <property name="mnemonic_widget">entry_proxy_ftp</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">5</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="heading_proxy_socks">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label" translatable="yes" context="GUI|Network|Proxy">_Socks Host</property>
-                                            <property name="use_underline">True</property>
-                                            <property name="mnemonic_widget">entry_proxy_socks</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">6</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkLabel" id="label_proxy_warning">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">False</property>
-                                            <property name="label">WPAD warning...</property>
-                                            <property name="wrap">True</property>
-                                            <property name="width_chars">50</property>
-                                            <property name="xalign">0</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">0</property>
-                                            <property name="top_attach">7</property>
-                                            <property name="width">3</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkEntry" id="entry_proxy_http">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">True</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">3</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkSpinButton" id="spinbutton_proxy_http">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">True</property>
-                                            <property name="invisible_char">●</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">2</property>
-                                            <property name="top_attach">3</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkEntry" id="entry_proxy_https">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">True</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">4</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkEntry" id="entry_proxy_ftp">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">True</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">5</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkEntry" id="entry_proxy_socks">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">True</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">1</property>
-                                            <property name="top_attach">6</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkSpinButton" id="spinbutton_proxy_https">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">True</property>
-                                            <property name="invisible_char">●</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">2</property>
-                                            <property name="top_attach">4</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkSpinButton" id="spinbutton_proxy_ftp">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">True</property>
-                                            <property name="invisible_char">●</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">2</property>
-                                            <property name="top_attach">5</property>
-                                          </packing>
-                                        </child>
-                                        <child>
-                                          <object class="GtkSpinButton" id="spinbutton_proxy_socks">
-                                            <property name="visible">True</property>
-                                            <property name="can_focus">True</property>
-                                            <property name="invisible_char">●</property>
-                                            <property name="xalign">1</property>
-                                          </object>
-                                          <packing>
-                                            <property name="left_attach">2</property>
-                                            <property name="top_attach">6</property>
-                                          </packing>
-                                        </child>
-                                      </object>
-                                      <packing>
-                                        <property name="expand">False</property>
-                                        <property name="fill">True</property>
-                                        <property name="position">0</property>
-                                      </packing>
-                                    </child>
-                                  </object>
-                                  <packing>
-                                    <property name="position">4</property>
-                                  </packing>
-                                </child>
-                                <child type="tab">
-                                  <object class="GtkLabel" id="label46">
-                                    <property name="visible">True</property>
-                                    <property name="can_focus">False</property>
-                                    <property name="label">proxy</property>
-                                  </object>
-                                  <packing>
-                                    <property name="position">4</property>
-                                    <property name="tab_fill">False</property>
-                                  </packing>
-                                </child>
-                                <child>
-                                  <object class="GtkBox" id="vboxNodevice">
-                                    <property name="visible">True</property>
-                                    <property name="can_focus">False</property>
-                                    <property name="border_width">12</property>
-                                    <property name="orientation">vertical</property>
-                                    <property name="spacing">6</property>
-                                    <child>
-                                      <object class="GtkLabel" id="label2">
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">False</property>
-                                        <property name="label" translatable="yes">No network devices available</property>
-                                      </object>
-                                      <packing>
-                                        <property name="expand">False</property>
-                                        <property name="fill">False</property>
-                                        <property name="position">0</property>
-                                      </packing>
-                                    </child>
-                                    <child>
-                                      <placeholder/>
-                                    </child>
-                                  </object>
-                                  <packing>
-                                    <property name="position">5</property>
-                                  </packing>
-                                </child>
-                                <child type="tab">
-                                  <object class="GtkLabel" id="label1">
-                                    <property name="visible">True</property>
-                                    <property name="can_focus">False</property>
-                                    <property name="label">nodevice</property>
-                                  </object>
-                                  <packing>
-                                    <property name="position">5</property>
-                                    <property name="tab_fill">False</property>
-                                  </packing>
-                                </child>
-                              </object>
-                              <packing>
-                                <property name="expand">True</property>
-                                <property name="fill">True</property>
-                                <property name="position">1</property>
-                              </packing>
-                            </child>
-                          </object>
-                          <packing>
-                            <property name="expand">True</property>
-                            <property name="fill">True</property>
-                            <property name="position">0</property>
-                          </packing>
-                        </child>
-                        <child internal-child="accessible">
-                          <object class="AtkObject" id="network_config_vbox-atkobject">
-                            <property name="AtkObject::accessible-name" translatable="yes">Network Config Box</property>
-                          </object>
-                        </child>
-                      </object>
-                      <packing>
-                        <property name="expand">True</property>
-                        <property name="fill">True</property>
-                        <property name="position">0</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkBox" id="hbox54">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <child>
-                          <object class="GtkButton" id="button_unlock">
-                            <property name="label" translatable="yes" context="GUI|Network">Unloc_k</property>
-                            <property name="visible">True</property>
-                            <property name="can_focus">True</property>
-                            <property name="receives_default">True</property>
-                            <property name="use_underline">True</property>
-                          </object>
-                          <packing>
-                            <property name="expand">False</property>
-                            <property name="fill">False</property>
-                            <property name="position">0</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkBox" id="hbox_flight_mode">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
-                            <property name="spacing">3</property>
-                            <child>
-                              <object class="GtkSwitch" id="switch_flight_mode">
-                                <property name="visible">True</property>
-                                <property name="can_focus">True</property>
-                              </object>
-                              <packing>
-                                <property name="expand">False</property>
-                                <property name="fill">False</property>
-                                <property name="pack_type">end</property>
-                                <property name="position">0</property>
-                              </packing>
-                            </child>
-                            <child>
-                              <object class="GtkLabel" id="label_flight_mode">
-                                <property name="visible">True</property>
-                                <property name="can_focus">False</property>
-                                <property name="label" translatable="yes" context="GUI|Network">Airplane Mode</property>
-                                <property name="use_underline">True</property>
-                                <property name="mnemonic_widget">switch_flight_mode</property>
-                              </object>
-                              <packing>
-                                <property name="expand">False</property>
-                                <property name="fill">False</property>
-                                <property name="pack_type">end</property>
-                                <property name="position">1</property>
-                              </packing>
-                            </child>
-                          </object>
-                          <packing>
-                            <property name="expand">True</property>
-                            <property name="fill">True</property>
-                            <property name="position">1</property>
-                          </packing>
-                        </child>
-                        <child internal-child="accessible">
-                          <object class="AtkObject" id="hbox54-atkobject">
-                            <property name="AtkObject::accessible-name" translatable="yes">More Network Config Box</property>
-                          </object>
-                        </child>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkBox" id="box_hostname">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="margin_top">10</property>
-                        <property name="spacing">5</property>
-                        <child>
-                          <object class="GtkLabel" id="label_hostname">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
-                            <property name="label" translatable="yes" context="GUI|Network">_Host Name:</property>
-                            <property name="use_underline">True</property>
-                            <property name="mnemonic_widget">entry_hostname</property>
-                          </object>
-                          <packing>
-                            <property name="expand">False</property>
-                            <property name="fill">True</property>
-                            <property name="position">0</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkEntry" id="entry_hostname">
-                            <property name="visible">True</property>
-                            <property name="can_focus">True</property>
-                            <property name="width_chars">35</property>
-                            <child internal-child="accessible">
-                              <object class="AtkObject" id="entry_hostname-atkobject">
-                                <property name="AtkObject::accessible-name" translatable="yes">Host Name</property>
-                              </object>
-                            </child>
-                          </object>
-                          <packing>
-                            <property name="expand">False</property>
-                            <property name="fill">True</property>
-                            <property name="position">1</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkButton" id="button_apply_hostname">
-                            <property name="label" translatable="yes" context="GUI|Network|Hostname">_Apply</property>
-                            <property name="visible">True</property>
-                            <property name="can_focus">True</property>
-                            <property name="receives_default">True</property>
-                            <property name="tooltip_text" translatable="yes">Set as current system host name.</property>
-                            <property name="use_underline">True</property>
-                          </object>
-                          <packing>
-                            <property name="expand">False</property>
-                            <property name="fill">True</property>
-                            <property name="position">2</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkLabel" id="heading_current_hostname">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
-                            <property name="halign">end</property>
-                            <property name="xpad">10</property>
-                            <property name="label" translatable="yes">Current host name:</property>
-                          </object>
-                          <packing>
-                            <property name="expand">True</property>
-                            <property name="fill">True</property>
-                            <property name="position">3</property>
-                          </packing>
-                        </child>
-                        <child>
-                          <object class="GtkLabel" id="label_current_hostname">
-                            <property name="visible">True</property>
-                            <property name="can_focus">False</property>
-                          </object>
-                          <packing>
-                            <property name="expand">False</property>
-                            <property name="fill">False</property>
-                            <property name="position">4</property>
-                          </packing>
-                        </child>
-                      </object>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">True</property>
-                        <property name="position">2</property>
-                      </packing>
-                    </child>
-                  </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">1</property>
-                  </packing>
-                </child>
-              </object>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">True</property>
-            <property name="fill">True</property>
-            <property name="position">1</property>
-          </packing>
-        </child>
-      </object>
-    </child>
-    <child internal-child="accessible">
-      <object class="AtkObject" id="networkWindow-atkobject">
-        <property name="AtkObject::accessible-name" translatable="yes">NETWORK &amp; HOST NAME</property>
-      </object>
-    </child>
-  </object>
-  <object class="AnacondaStandaloneWindow" id="networkStandaloneWindow">
-    <property name="can_focus">False</property>
-    <property name="window_name" translatable="yes">NETWORK CONFIGURATION</property>
-    <child internal-child="main_box">
-      <object class="GtkBox" id="AnacondaStandaloneWindow-main_box5">
-        <property name="can_focus">False</property>
-        <property name="orientation">vertical</property>
-        <property name="spacing">6</property>
-        <child internal-child="nav_box">
-          <object class="GtkEventBox" id="AnacondaStandaloneWindow-nav_box5">
-            <property name="can_focus">False</property>
-            <child internal-child="nav_area">
-              <object class="GtkGrid" id="AnacondaStandaloneWindow-nav_area5">
-                <property name="can_focus">False</property>
-                <property name="margin_left">6</property>
-                <property name="margin_right">6</property>
-                <property name="margin_top">6</property>
-                <child>
-                  <placeholder/>
-                </child>
-                <child>
-                  <placeholder/>
-                </child>
-              </object>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">False</property>
-            <property name="position">0</property>
-          </packing>
-        </child>
-        <child internal-child="alignment">
-          <object class="GtkAlignment" id="AnacondaStandaloneWindow-alignment5">
-            <property name="can_focus">False</property>
-            <property name="yalign">0</property>
-            <property name="xscale">0</property>
-            <property name="yscale">0.5</property>
-            <child internal-child="action_area">
-              <object class="GtkBox" id="AnacondaStandaloneWindow-action_area5">
-                <property name="can_focus">False</property>
-                <property name="orientation">vertical</property>
-                <property name="spacing">6</property>
-                <child>
-                  <object class="GtkLabel" id="networkNeedLabel1">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="label" translatable="yes">We'll need network access to fetch information about your location and to make software
-updates available for you.</property>
-                    <attributes>
-                      <attribute name="font-desc" value="Cantarell 12"/>
-                    </attributes>
-                  </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="position">0</property>
-                  </packing>
-                </child>
-                <child>
-                  <placeholder/>
-                </child>
-              </object>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">True</property>
-            <property name="fill">True</property>
-            <property name="position">1</property>
-          </packing>
-        </child>
-      </object>
-    </child>
-  </object>
-  <object class="GtkDialog" id="secret_agent_dialog">
-    <property name="can_focus">False</property>
-    <property name="border_width">6</property>
-    <property name="title" translatable="yes">Authentication</property>
-    <property name="type_hint">dialog</property>
-    <property name="decorated">False</property>
-    <child internal-child="vbox">
-      <object class="GtkBox" id="dialog_box">
-        <property name="can_focus">False</property>
-        <property name="orientation">vertical</property>
-        <property name="spacing">5</property>
-        <child internal-child="action_area">
-          <object class="GtkButtonBox" id="dialog-action_area2">
-            <property name="can_focus">False</property>
-            <property name="layout_style">end</property>
-            <child>
-              <object class="GtkButton" id="button1">
-                <property name="label" translatable="yes" context="GUI|Network|Authentication Dialog">_Cancel</property>
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
-                <property name="receives_default">True</property>
-                <property name="use_underline">True</property>
-                <property name="image_position">right</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">0</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkButton" id="connect_button">
-                <property name="label" translatable="yes" context="GUI|Network|Authentication Dialog">C_onnect</property>
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
-                <property name="receives_default">True</property>
-                <property name="use_underline">True</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">1</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">True</property>
-            <property name="pack_type">end</property>
-            <property name="position">0</property>
-          </packing>
-        </child>
-        <child>
-          <object class="GtkBox" id="box2">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
-            <property name="margin_left">6</property>
-            <property name="margin_right">6</property>
-            <property name="margin_top">6</property>
-            <property name="margin_bottom">6</property>
-            <child>
-              <object class="GtkImage" id="image_password_dialog">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="valign">start</property>
-                <property name="hexpand">True</property>
-                <property name="xpad">15</property>
-                <property name="icon_name">dialog-password-symbolic</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">0</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkBox" id="password_box">
-                <property name="visible">True</property>
-                <property name="can_focus">False</property>
-                <property name="orientation">vertical</property>
-                <child>
-                  <object class="GtkLabel" id="label_title">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="halign">start</property>
-                    <property name="margin_bottom">6</property>
-                    <property name="hexpand">True</property>
-                    <property name="label" translatable="yes">Authentication required by wireless network</property>
-                    <attributes>
-                      <attribute name="weight" value="bold"/>
-                    </attributes>
-                  </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="padding">2</property>
-                    <property name="position">0</property>
-                  </packing>
-                </child>
-                <child>
-                  <object class="GtkLabel" id="label_message">
-                    <property name="visible">True</property>
-                    <property name="can_focus">False</property>
-                    <property name="halign">start</property>
-                    <property name="label" translatable="yes">Passwords or encryption keys are required to access
-the wireless network</property>
-                    <property name="xalign">0</property>
-                    <property name="yalign">0</property>
-                  </object>
-                  <packing>
-                    <property name="expand">False</property>
-                    <property name="fill">True</property>
-                    <property name="padding">3</property>
-                    <property name="position">1</property>
-                  </packing>
-                </child>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">1</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="expand">False</property>
-            <property name="fill">True</property>
-            <property name="position">1</property>
-          </packing>
-        </child>
-      </object>
-    </child>
-    <action-widgets>
-      <action-widget response="0">button1</action-widget>
-      <action-widget response="1">connect_button</action-widget>
-    </action-widgets>
-  </object>
-</interface>
diff --git a/pyanaconda/ui/gui/spokes/network.py b/pyanaconda/ui/gui/spokes/network.py
deleted file mode 100644
index 780b1d83f..000000000
--- a/pyanaconda/ui/gui/spokes/network.py
+++ /dev/null
@@ -1,1669 +0,0 @@
-# Network configuration spoke classes
-#
-# Copyright (C) 2011  Red Hat, Inc.
-#
-# This copyrighted material is made available to anyone wishing to use,
-# modify, copy, or redistribute it subject to the terms and conditions of
-# the GNU General Public License v.2, or (at your option) any later version.
-# This program is distributed in the hope that it will be useful, but WITHOUT
-# ANY WARRANTY expressed or implied, including the implied warranties of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
-# Public License for more details.  You should have received a copy of the
-# GNU General Public License along with this program; if not, write to the
-# Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
-# 02110-1301, USA.  Any Red Hat trademarks that are incorporated in the
-# source code or documentation are not subject to the GNU General Public
-# License and may only be used or replicated with the express permission of
-# Red Hat, Inc.
-#
-
-import gi
-gi.require_version("Gtk", "3.0")
-gi.require_version("GObject", "2.0")
-gi.require_version("Pango", "1.0")
-gi.require_version("Gio", "2.0")
-gi.require_version("NM", "1.0")
-
-from gi.repository import Gtk
-from gi.repository import GObject, Pango, Gio, NM
-
-from pyanaconda.core.i18n import _, N_, C_, CN_
-from pyanaconda.flags import flags as anaconda_flags
-from pyanaconda.ui.communication import hubQ
-from pyanaconda.ui.gui import GUIObject
-from pyanaconda.ui.gui.spokes import NormalSpoke, StandaloneSpoke
-from pyanaconda.ui.categories.system import SystemCategory
-from pyanaconda.ui.gui.hubs.summary import SummaryHub
-from pyanaconda.ui.gui.utils import gtk_call_once, escape_markup, really_hide, really_show
-from pyanaconda.ui.common import FirstbootSpokeMixIn
-from pyanaconda.core.configuration.anaconda import conf
-from pyanaconda.core.util import startProgram
-from pyanaconda.core.process_watchers import PidWatcher
-from pyanaconda.core.constants import ANACONDA_ENVIRON
-from pyanaconda.core import glib
-from pyanaconda.modules.common.constants.services import NETWORK
-from pyanaconda.modules.common.structures.network import NetworkDeviceConfiguration
-
-from pyanaconda import network
-
-import dbus
-import dbus.service
-# Used for ascii_letters and hexdigits constants
-import string # pylint: disable=deprecated-module
-from uuid import uuid4
-
-from dbus.mainloop.glib import DBusGMainLoop
-DBusGMainLoop(set_as_default=True)
-
-from pyanaconda.anaconda_loggers import get_module_logger
-log = get_module_logger(__name__)
-
-NM._80211ApFlags = getattr(NM, "80211ApFlags")
-NM._80211ApSecurityFlags = getattr(NM, "80211ApSecurityFlags")
-NM._80211Mode = getattr(NM, "80211Mode")
-
-NM_SERVICE = "org.freedesktop.NetworkManager"
-NM_SECRET_AGENT_GET_SECRETS_FLAG_ALLOW_INTERACTION = 0x1
-SECRET_AGENT_IFACE = 'org.freedesktop.NetworkManager.SecretAgent'
-AGENT_MANAGER_IFACE = 'org.freedesktop.NetworkManager.AgentManager'
-AGENT_MANAGER_PATH = "/org/freedesktop/NetworkManager/AgentManager"
-
-IPV4_CONFIG = "IPv4"
-IPV6_CONFIG = "IPv6"
-
-DEVICES_COLUMN_ICON_NAME = 0
-DEVICES_COLUMN_SORT = 1
-DEVICES_COLUMN_TITLE = 2
-DEVICES_COLUMN_OBJECT = 3
-
-
-def localized_string_of_device_state(device, state):
-    s = _("Status unknown (missing)")
-
-    if state == NM.DeviceState.UNKNOWN:
-        s = _("Status unknown")
-    elif state == NM.DeviceState.UNMANAGED:
-        s = _("Unmanaged")
-    elif state == NM.DeviceState.UNAVAILABLE:
-        if not device:
-            s = _("Unavailable")
-        elif device.get_firmware_missing():
-            s = _("Firmware missing")
-        else:
-            s = _("Unavailable")
-    elif state == NM.DeviceState.DISCONNECTED:
-        if (device and device.get_device_type() == NM.DeviceType.ETHERNET
-              and not device.get_carrier()):
-            s = _("Cable unplugged")
-        else:
-            s = _("Disconnected")
-    elif state in (NM.DeviceState.PREPARE,
-                   NM.DeviceState.CONFIG,
-                   NM.DeviceState.IP_CONFIG,
-                   NM.DeviceState.IP_CHECK):
-        s = _("Connecting")
-    elif state == NM.DeviceState.NEED_AUTH:
-        s = _("Authentication required")
-    elif state == NM.DeviceState.ACTIVATED:
-        s = _("Connected")
-    elif state == NM.DeviceState.DEACTIVATING:
-        s = _("Disconnecting")
-    elif state == NM.DeviceState.FAILED:
-        s = _("Connection failed")
-
-    return s
-
-
-__all__ = ["NetworkSpoke", "NetworkStandaloneSpoke"]
-
-
-class CellRendererSignal(Gtk.CellRendererPixbuf):
-
-    __gtype_name__ = "CellRendererSignal"
-    __gproperties__ = {
-        "signal": (GObject.TYPE_UINT,
-                   "Signal", "Signal",
-                   0, glib.MAXUINT, 0,
-                   GObject.ParamFlags.READWRITE),
-    }
-
-    def __init__(self):
-        super().__init__()
-        self.signal = 0
-
-    def do_get_property(self, prop):
-        if prop.name == 'signal':
-            return self.signal
-        else:
-            raise AttributeError('unknown property %s' % prop.name)
-
-    def do_set_property(self, prop, value):
-        if prop.name == 'signal':
-            self.signal = value
-            self._set_icon_name(value)
-        else:
-            raise AttributeError('unknown property %s' % prop.name)
-
-    def _set_icon_name(self, value):
-
-        if value == 0:
-            self.set_property("gicon", None)
-
-        if value < 20:
-            icon_name = "network-wireless-signal-none-symbolic"
-        elif value < 40:
-            icon_name = "network-wireless-signal-weak-symbolic"
-        elif value < 50:
-            icon_name = "network-wireless-signal-ok-symbolic"
-        elif value < 80:
-            icon_name = "network-wireless-signal-good-symbolic"
-        else:
-            icon_name = "network-wireless-signal-excellent-symbolic"
-
-        icon = Gio.ThemedIcon.new_with_default_fallbacks(icon_name)
-        self.set_property("gicon", icon)
-
-
-NM_AP_SEC_UNKNOWN = 0
-NM_AP_SEC_NONE = 1
-NM_AP_SEC_WEP = 2
-NM_AP_SEC_WPA = 3
-NM_AP_SEC_WPA2 = 4
-
-
-class CellRendererSecurity(Gtk.CellRendererPixbuf):
-
-    __gtype_name__ = "CellRendererSecurity"
-    __gproperties__ = {"security": (GObject.TYPE_UINT,
-                                    "Security", "Security",
-                                    0, glib.MAXUINT, 0,
-                                    GObject.ParamFlags.READWRITE),
-                       }
-
-    def __init__(self):
-        super().__init__()
-        self.security = NM_AP_SEC_UNKNOWN
-        self.icon_name = ""
-
-    def do_get_property(self, prop):
-        if prop.name == 'security':
-            return self.security
-        else:
-            raise AttributeError('unknown property %s' % prop.name)
-
-    def do_set_property(self, prop, value):
-        if prop.name == 'security':
-            self.security = value
-            self._set_icon_name(value)
-        else:
-            raise AttributeError('unknown property %s' % prop.name)
-
-    def _set_icon_name(self, security):
-        self.icon_name = ""
-        if security not in (NM_AP_SEC_NONE, NM_AP_SEC_UNKNOWN):
-            self.icon_name = "network-wireless-encrypted-symbolic"
-
-        self.set_property("icon-name", self.icon_name)
-
-
-class NetworkControlBox(GObject.GObject):
-
-    __gsignals__ = {
-        "nm-state-changed": (GObject.SignalFlags.RUN_LAST, GObject.TYPE_NONE, []),
-        "device-state-changed": (GObject.SignalFlags.RUN_LAST, GObject.TYPE_NONE, [str, int, int, int]),
-        "apply-hostname": (GObject.SignalFlags.RUN_LAST, GObject.TYPE_NONE, []),
-    }
-
-    supported_device_types = [
-        NM.DeviceType.ETHERNET,
-        NM.DeviceType.WIFI,
-        NM.DeviceType.TEAM,
-        NM.DeviceType.BOND,
-        NM.DeviceType.VLAN,
-        NM.DeviceType.BRIDGE,
-    ]
-
-    virtual_device_types = [
-        NM.DeviceType.TEAM,
-        NM.DeviceType.BOND,
-        NM.DeviceType.VLAN,
-        NM.DeviceType.BRIDGE,
-    ]
-
-    wired_ui_device_types = [
-        NM.DeviceType.ETHERNET,
-        NM.DeviceType.TEAM,
-        NM.DeviceType.BOND,
-        NM.DeviceType.VLAN,
-        NM.DeviceType.BRIDGE,
-    ]
-
-    device_type_sort_value = {
-        NM.DeviceType.ETHERNET : "1",
-        NM.DeviceType.WIFI : "2",
-    }
-
-    device_type_name = {
-        NM.DeviceType.UNKNOWN: N_("Unknown"),
-        NM.DeviceType.ETHERNET: N_("Ethernet"),
-        NM.DeviceType.WIFI: N_("Wireless"),
-        NM.DeviceType.BOND: N_("Bond"),
-        NM.DeviceType.VLAN: N_("VLAN"),
-        NM.DeviceType.TEAM: N_("Team"),
-        NM.DeviceType.BRIDGE: N_("Bridge"),
-    }
-
-    def __init__(self, builder, client, network_module, spoke=None):
-
-        super().__init__()
-
-        self.builder = builder
-        self._running_nmce = None
-        self.spoke = spoke
-        self.client = client
-        self._network_module = network_module
-
-        # button for creating of virtual bond and vlan devices
-        self.builder.get_object("add_toolbutton").set_sensitive(True)
-        self.builder.get_object("add_toolbutton").connect("clicked",
-                                                           self.on_add_device_clicked)
-        self.builder.get_object("remove_toolbutton").set_sensitive(False)
-        self.builder.get_object("remove_toolbutton").connect("clicked",
-                                                           self.on_remove_device_clicked)
-
-        not_supported = ["start_hotspot_button",
-                         "stop_hotspot_button",
-                         "heading_hotspot_network_name",
-                         "heading_hotspot_security_key",
-                         "label_hotspot_network_name",
-                         "label_hotspot_security_key",
-                         "hbox54",
-                        ]
-
-        do_not_show_in_refresh = ["heading_wireless_network_name",
-                                  "combobox_wireless_network_name"]
-        do_not_show_in_refresh += ["%s_%s_%s" % (widget, ty, value)
-                                   for widget in ["heading", "label"]
-                                   for ty in ["wired", "wireless"]
-                                   for value in ["ipv4", "ipv6", "dns", "route"]]
-        do_not_show_in_refresh += ["%s_wired_%s" % (widget, value)
-                                   for widget in ["heading", "label"]
-                                   for value in ["slaves", "vlanid", "parent"]]
-
-        for ident in not_supported + do_not_show_in_refresh:
-            self.builder.get_object(ident).set_no_show_all(True)
-            self.builder.get_object(ident).hide()
-
-        self.builder.get_object("notebook_types").set_show_tabs(False)
-
-        # to prevent UI update signals races
-        self._updating_device = False
-
-        # devices list
-        # limited to wired and wireless
-        treeview = self.builder.get_object("treeview_devices")
-        self._add_device_columns(treeview)
-        self.dev_cfg_store = self.builder.get_object("liststore_devices")
-        self.dev_cfg_store.set_sort_column_id(2, Gtk.SortType.ASCENDING)
-        selection = treeview.get_selection()
-        selection.set_mode(Gtk.SelectionMode.BROWSE)
-        selection.connect("changed", self.on_device_selection_changed)
-
-        # wireless APs list
-        combobox = self.builder.get_object("combobox_wireless_network_name")
-        self._add_ap_icons(combobox)
-        model = combobox.get_model()
-        model.set_sort_column_id(2, Gtk.SortType.ASCENDING)
-        combobox.connect("changed", self.on_wireless_ap_changed_cb)
-        self.selected_ap = None
-
-        self.builder.get_object("device_wired_off_switch").connect("notify::active",
-                                                             self.on_device_off_toggled)
-        self.builder.get_object("device_wireless_off_switch").connect("notify::active",
-                                                             self.on_device_off_toggled)
-        self.builder.get_object("button_wired_options").connect("clicked",
-                                                           self.on_edit_connection)
-        self.builder.get_object("button_wireless_options").connect("clicked",
-                                                              self.on_edit_connection)
-        self.entry_hostname = self.builder.get_object("entry_hostname")
-        self.label_current_hostname = self.builder.get_object("label_current_hostname")
-        self.button_apply_hostname = self.builder.get_object("button_apply_hostname")
-        self.button_apply_hostname.connect("clicked", self.on_apply_hostname)
-
-    @property
-    def vbox(self):
-        return self.builder.get_object("networkControlBox_vbox")
-
-    def _add_ap_icons(self, combobox):
-        cell = CellRendererSecurity()
-        cell.set_padding(4, 0)
-        combobox.pack_start(cell, False)
-        combobox.add_attribute(cell, "security", 5)
-
-        cell = CellRendererSignal()
-        cell.set_padding(4, 0)
-        #cell.set_property("xalign", 1.0)
-        combobox.pack_start(cell, False)
-        combobox.add_attribute(cell, "signal", 3)
-
-    def _add_device_columns(self, treeview):
-        rnd = Gtk.CellRendererPixbuf()
-        rnd.set_property("stock-size", Gtk.IconSize.DND)
-        # TODO Gtk3 icon-name? (also at other places)
-        col = Gtk.TreeViewColumn("Icon", rnd, **{"icon-name":0})
-        treeview.append_column(col)
-
-        rnd = Gtk.CellRendererText()
-        rnd.set_property("wrap-mode", Pango.WrapMode.WORD)
-        col = Gtk.TreeViewColumn("Text", rnd, markup=2)
-        col.set_sort_column_id(2)
-        col.set_expand(True)
-        treeview.append_column(col)
-
-    def initialize(self):
-        self.client.connect("notify::%s" % NM.CLIENT_WIRELESS_ENABLED,
-                            self.on_wireless_enabled)
-        self.client.connect("notify::%s" % NM.CLIENT_STATE,
-                            self.on_nm_state_changed)
-
-        self._load_device_configurations()
-        self._network_module.DeviceConfigurationChanged.connect(
-            self.on_device_configurations_changed
-        )
-
-        # select the first device
-        treeview = self.builder.get_object("treeview_devices")
-        selection = treeview.get_selection()
-        itr = self.dev_cfg_store.get_iter_first()
-        if itr:
-            selection.select_iter(itr)
-
-    def on_device_configurations_changed(self, changes):
-        log.debug("device configurations changed: %s", changes)
-        self._update_device_configurations(changes)
-        self.refresh_ui()
-
-    def _update_device_configurations(self, changes):
-        for old_values, new_values in changes:
-            old_cfg = NetworkDeviceConfiguration.from_structure(old_values)
-            new_cfg = NetworkDeviceConfiguration.from_structure(new_values)
-
-            device_type = old_cfg.device_type or new_cfg.device_type
-            # physical devices - devices persist in store
-            if device_type not in self.virtual_device_types:
-                # device added
-                if not old_cfg.device_name and new_cfg.device_name:
-                    self.add_dev_cfg(new_cfg)
-                    self.watch_dev_cfg_device(new_cfg)
-                # device removed
-                elif old_cfg.device_name and not new_cfg.device_name:
-                    self.remove_dev_cfg(old_cfg)
-                # connection modified
-                else:
-                    self.update_dev_cfg(old_cfg, new_cfg)
-
-            # virtual devices - connections persist in store
-            else:
-                # connection added
-                if not old_cfg.connection_uuid and new_cfg.connection_uuid:
-                    self.add_dev_cfg(new_cfg)
-                # connection removed
-                elif old_cfg.connection_uuid and not new_cfg.connection_uuid:
-                    self.remove_dev_cfg(old_cfg)
-                # virtual device added or removed
-                elif old_cfg.connection_uuid:
-                    self.update_dev_cfg(old_cfg, new_cfg)
-                    # added
-                    if not old_cfg.device_name and new_cfg.device_name:
-                        self.watch_dev_cfg_device(new_cfg)
-
-    def _load_device_configurations(self):
-        device_configurations = self._network_module.GetDeviceConfigurations()
-        self.dev_cfg_store.clear()
-        for device_configuration in device_configurations:
-            dev_cfg = NetworkDeviceConfiguration.from_structure(device_configuration)
-            self.add_dev_cfg(dev_cfg)
-            self.watch_dev_cfg_device(dev_cfg)
-
-    def refresh(self):
-        self.refresh_ui()
-
-    # Signal handlers.
-    def on_nm_state_changed(self, *args):
-        self.emit("nm-state-changed")
-
-    def on_device_selection_changed(self, *args):
-        self.refresh_ui()
-
-    def on_device_state_changed(self, device, new_state, *args):
-        self.emit("device-state-changed", device.get_iface(), new_state, *args)
-        if new_state == NM.DeviceState.SECONDARIES:
-            return
-        self._refresh_carrier_info()
-        dev_cfg = self.selected_dev_cfg()
-        if dev_cfg and dev_cfg.device_name == device.get_iface():
-            self.refresh_ui(state=new_state)
-
-    def on_device_config_changed(self, device, *args):
-        dev_cfg = self.selected_dev_cfg()
-        if dev_cfg and dev_cfg.device_name == device.get_iface():
-            self.refresh_ui()
-
-    def on_wireless_ap_changed_cb(self, combobox, *args):
-        if self._updating_device:
-            return
-        itr = combobox.get_active_iter()
-        if not itr:
-            return
-
-        dev_cfg = self.selected_dev_cfg()
-        if not dev_cfg:
-            return
-
-        device = self.client.get_device_by_iface(dev_cfg.device_name)
-
-        ap, ssid_target = combobox.get_model().get(itr, 0, 1)
-        self.selected_ap = ap
-
-        log.info("selected access point: %s", ssid_target)
-
-        cons = ap.filter_connections(device.filter_connections(self.client.get_connections()))
-        if cons:
-            con = cons[0]
-            self.client.activate_connection_async(con, device, ap.get_path(), None)
-        else:
-            if self._ap_is_enterprise(ap):
-                # Create a connection for the ap and [Configure] it later with nm-c-e
-                con = NM.SimpleConnection.new()
-                s_con = NM.SettingConnection.new()
-                s_con.set_property('uuid', str(uuid4()))
-                s_con.set_property('id', ssid_target)
-                s_con.set_property('type', '802-11-wireless')
-                s_wireless = NM.SettingWireless.new()
-                s_wireless.set_property('ssid', ap.get_ssid())
-                s_wireless.set_property('mode', 'infrastructure')
-                log.debug("adding connection for WPA-Enterprise AP %s", ssid_target)
-                con.add_setting(s_con)
-                con.add_setting(s_wireless)
-                persistent = True
-                self.client.add_connection_async(con, persistent, None)
-                self.builder.get_object("button_wireless_options").set_sensitive(True)
-            else:
-                self.client.add_and_activate_connection_async(None, device, ap.get_path(), None)
-
-    def _find_first_ap_setting(self, device, ap):
-        for con in device.filter_connections(self.client.get_connections()):
-            wireless_setting = con.get_setting_wireless()
-            if not wireless_setting or not wireless_setting.get_ssid():
-                # setting is None or non-broadcast AP, we ignore these
-                return
-            if wireless_setting.get_ssid().get_data() == ap.get_ssid().get_data():
-                return con
-
-    def on_edit_connection(self, *args):
-        dev_cfg = self.selected_dev_cfg()
-        if not dev_cfg:
-            return
-
-        device = self.client.get_device_by_iface(dev_cfg.device_name)
-        con = self.client.get_connection_by_uuid(dev_cfg.connection_uuid)
-        device_type = dev_cfg.device_type
-        iface = dev_cfg.device_name
-        activate = None
-        ssid = ""
-
-        if device_type == NM.DeviceType.WIFI:
-            if not self.selected_ap:
-                return
-            ssid = self.selected_ap.get_ssid().get_data()
-            con = self._find_first_ap_setting(device, self.selected_ap)
-            if not con:
-                log.debug("on_edit_connection: connection for ap %s not found", self.selected_ap)
-                return
-            # 871132 auto activate wireless connection after editing if it is not
-            # already activated (assume entering secrets)
-            condition = lambda: self.selected_ap != device.get_active_access_point()
-            activate = (con, device, condition)
-        else:
-            if not con:
-                log.debug("on_edit_connection: connection for device %s not found", iface)
-                if device_type == NM.DeviceType.ETHERNET:
-                    # Create default connection for the device and run nm-c-e on it
-                    default_con = self._default_eth_con(iface, autoconnect=False)
-                    persistent = False
-                    log.info("creating new connection for %s device", iface)
-                    self.client.add_connection_async(default_con, persistent, None,
-                            self._default_connection_added_cb, activate)
-                return
-
-            if device and device.get_state() == NM.DeviceState.ACTIVATED:
-                # Reactivate the connection after configuring it (if it changed)
-                settings = con.to_dbus(NM.ConnectionSerializationFlags.ALL)
-                settings_changed = lambda: settings != con.to_dbus(NM.ConnectionSerializationFlags.ALL)
-                activate = (con, device, settings_changed)
-
-        log.info("configuring connection %s device %s ssid %s",
-                 con.get_uuid(), iface, ssid)
-        self._run_nmce(con.get_uuid(), activate)
-
-    def _default_connection_added_cb(self, client, result, activate):
-        con = client.add_connection_finish(result)
-        uuid = con.get_setting_connection().get_uuid()
-        log.info("configuring new connection %s", uuid)
-        self._run_nmce(uuid, activate)
-
-    def _run_nmce(self, uuid, activate):
-        self.kill_nmce(msg="Configure button clicked")
-        proc = startProgram(["nm-connection-editor", "--keep-above", "--edit", "%s" % uuid], reset_lang=False)
-        self._running_nmce = proc
-
-        PidWatcher().watch_process(proc.pid, self.on_nmce_exited, activate)
-
-    def _default_eth_con(self, iface, autoconnect):
-        con = NM.SimpleConnection.new()
-        s_con = NM.SettingConnection.new()
-        s_con.set_property('uuid', str(uuid4()))
-        s_con.set_property('id', iface)
-        s_con.set_property('interface-name', iface)
-        s_con.set_property('autoconnect', autoconnect)
-        s_con.set_property('type', '802-3-ethernet')
-        s_wired = NM.SettingWired.new()
-        con.add_setting(s_con)
-        con.add_setting(s_wired)
-        return con
-
-    def kill_nmce(self, msg=""):
-        if not self._running_nmce:
-            return False
-
-        log.debug("killing running nm-c-e %s: %s", self._running_nmce.pid, msg)
-        self._running_nmce.kill()
-        self._running_nmce = None
-        return True
-
-    def on_nmce_exited(self, pid, condition, activate=None):
-        # waitpid() has been called, make sure we don't do anything else with the proc
-        self._running_nmce = None
-        log.debug("nm-c-e exited with status %s", condition)
-
-        # nm-c-e was closed normally, not killed by anaconda
-        if condition == 0:
-            if activate:
-                # The default of None confuses pylint
-                con, device, activate_condition = activate # pylint: disable=unpacking-non-sequence
-                if activate_condition():
-                    gtk_call_once(self._activate_connection_cb, con, device)
-            self._network_module.LogConfigurationState("Connection Editor was run.")
-
-    def _activate_connection_cb(self, con, device):
-        self.client.activate_connection_async(con, device, None, None)
-        if self.spoke:
-            self.spoke.networking_changed = True
-
-    def on_wireless_enabled(self, *args):
-        switch = self.builder.get_object("device_wireless_off_switch")
-        self._updating_device = True
-        switch.set_active(self.client.wireless_get_enabled())
-        self._updating_device = False
-
-    def on_device_off_toggled(self, switch, *args):
-        if self._updating_device:
-            return
-
-        active = switch.get_active()
-        dev_cfg = self.selected_dev_cfg()
-        if not dev_cfg:
-            return
-        device = self.client.get_device_by_iface(dev_cfg.device_name)
-        con = self.client.get_connection_by_uuid(dev_cfg.connection_uuid)
-        iface = dev_cfg.device_name
-
-        log.info("device %s switched %s", iface, "on" if active else "off")
-
-        if dev_cfg.device_type == NM.DeviceType.WIFI:
-            self.client.wireless_set_enabled(active)
-        else:
-            if active:
-                if not con:
-                    log.debug("on_device_off_toggled: no connection for %s", iface)
-                    return
-
-                self.client.activate_connection_async(con, device, None, None)
-            else:
-                if not device:
-                    log.debug("on_device_off_toggled: no device for %s", iface)
-                    return
-                device.disconnect(None)
-
-        if self.spoke:
-            self.spoke.networking_changed = True
-
-    def on_add_device_clicked(self, *args):
-        dialog = self.builder.get_object("add_device_dialog")
-        with self.spoke.main_window.enlightbox(dialog):
-            rc = dialog.run()
-        dialog.hide()
-        if rc == 1:
-            ai = self.builder.get_object("combobox_add_device").get_active_iter()
-            model = self.builder.get_object("liststore_add_device")
-            dev_type = model[ai][1]
-            self.add_device(dev_type)
-
-    def on_remove_device_clicked(self, *args):
-        selection = self.builder.get_object("treeview_devices").get_selection()
-        model, itr = selection.get_selected()
-        if not itr:
-            return None
-        dev_cfg = model[itr][DEVICES_COLUMN_OBJECT]
-        con = self.client.get_connection_by_uuid(dev_cfg.connection_uuid)
-        if con:
-            con.delete()
-
-    def on_apply_hostname(self, *args):
-        self.emit("apply-hostname")
-
-    def add_device(self, ty):
-        log.info("adding device of type %s", ty)
-        self.kill_nmce(msg="Add device button clicked")
-        proc = startProgram(["nm-connection-editor", "--keep-above", "--create", "--type=%s" % ty], reset_lang=False)
-        self._running_nmce = proc
-
-        PidWatcher().watch_process(proc.pid, self.on_nmce_exited)
-
-    def selected_dev_cfg(self):
-        selection = self.builder.get_object("treeview_devices").get_selection()
-        model, itr = selection.get_selected()
-        if not itr:
-            return None
-        return model[itr][DEVICES_COLUMN_OBJECT]
-
-    def add_dev_cfg(self, dev_cfg):
-        log.debug("adding device configuration: %s", dev_cfg)
-        row = [None, None, None, dev_cfg]
-        self._update_row_from_object(row)
-        self.dev_cfg_store.append(row)
-
-    def _update_row_from_object(self, row):
-        dev_cfg = row[DEVICES_COLUMN_OBJECT]
-        row[DEVICES_COLUMN_ICON_NAME] = self._dev_icon_name(dev_cfg)
-        row[DEVICES_COLUMN_SORT] = self.device_type_sort_value.get(dev_cfg.device_type, "100")
-        row[DEVICES_COLUMN_TITLE] = self._dev_title(dev_cfg)
-
-    def watch_dev_cfg_device(self, dev_cfg):
-        device = self.client.get_device_by_iface(dev_cfg.device_name)
-        if device:
-            device.connect("notify::ip4-config", self.on_ip_obj_changed, IPV4_CONFIG)
-            device.connect("notify::ip6-config", self.on_ip_obj_changed, IPV6_CONFIG)
-            device.connect("state-changed", self.on_device_state_changed)
-
-    def remove_dev_cfg(self, dev_cfg):
-        log.debug("removing device configuration: %s", dev_cfg)
-        for row in self.dev_cfg_store:
-            stored_cfg = row[DEVICES_COLUMN_OBJECT]
-            if stored_cfg == dev_cfg:
-                self.dev_cfg_store.remove(row.iter)
-                return
-        log.debug("configuration to be removed not found")
-
-    def update_dev_cfg(self, old_cfg, new_cfg):
-        log.debug("updating device configuration: %s -> %s", old_cfg, new_cfg)
-        for row in self.dev_cfg_store:
-            stored_cfg = row[DEVICES_COLUMN_OBJECT]
-            if stored_cfg == old_cfg:
-                row[DEVICES_COLUMN_OBJECT] = new_cfg
-                self._update_row_from_object(row)
-                return
-        log.debug("configuration to be updated not found")
-
-    def on_ip_obj_changed(self, device, *args):
-        """Callback when ipX-config objects will be changed.
-
-        Register callback on properties (IP address, gateway...) of these ipX-config
-        objects when they are created.
-        """
-        log.debug("%s object changed", args[1])
-        self.on_device_config_changed(device)
-        if args[1] == IPV4_CONFIG:
-            config = device.props.ip4_config
-        else:
-            config = device.props.ip6_config
-
-        if config:
-            # register callback when inner NMIP[4,6]Config object changed
-            config.connect("notify::addresses", self.on_config_changed, device)
-            config.connect("notify::gateway", self.on_config_changed, device)
-            config.connect("notify::nameservers", self.on_config_changed, device)
-
-    def on_config_changed(self, config, *args):
-        """Callback on property change of ipX-config objects.
-
-        Call method which show changed properties (IP, gateway...) to an user.
-        """
-        self.on_device_config_changed(args[1])
-
-    def _dev_icon_name(self, dev_cfg):
-        icon_name = ""
-        if dev_cfg.device_type in self.wired_ui_device_types:
-            device = self.client.get_device_by_iface(dev_cfg.device_name)
-            if device:
-                if device.get_state() == NM.DeviceState.UNAVAILABLE:
-                    icon_name = "network-wired-disconnected"
-                else:
-                    icon_name = "network-wired"
-            else:
-                icon_name = "network-wired-disconnected"
-        elif dev_cfg.device_type == NM.DeviceType.WIFI:
-            icon_name = "network-wireless"
-
-        return icon_name
-
-    def _dev_title(self, dev_cfg):
-        unplugged = ''
-        device = self.client.get_device_by_iface(dev_cfg.device_name)
-
-        if device:
-            if (device.get_state() == NM.DeviceState.UNAVAILABLE
-                and device.get_device_type() == NM.DeviceType.ETHERNET
-                and not device.get_carrier()):
-                # TRANSLATORS: ethernet cable is unplugged
-                unplugged = ', <i>%s</i>' % escape_markup(_("unplugged"))
-        connection_name = ""
-        if dev_cfg.device_type in self.virtual_device_types:
-            con = self.client.get_connection_by_uuid(dev_cfg.connection_uuid)
-            if con:
-                con_id = con.get_setting_connection().get_id()
-                if con_id:
-                    connection_name = " - {}".format(con_id)
-        # pylint: disable=unescaped-markup
-        title = '<span size="large">%s%s (%s%s)</span>' % \
-                 (escape_markup(_(self.device_type_name.get(dev_cfg.device_type, ""))),
-                  escape_markup(connection_name),
-                  escape_markup(dev_cfg.device_name),
-                  unplugged)
-
-        if device:
-            title += '\n<span size="small">%s %s</span>' % \
-                    (escape_markup(device.get_vendor() or ""),
-                     escape_markup(device.get_product() or ""))
-        return title
-
-    def refresh_ui(self, state=None):
-
-        dev_cfg = self.selected_dev_cfg()
-        if not dev_cfg:
-            # the list is empty (no supported devices)
-            notebook = self.builder.get_object("notebook_types")
-            notebook.set_current_page(5)
-            return
-
-        self._refresh_device_type_page(dev_cfg.device_type)
-        self._refresh_header_ui(dev_cfg, state)
-        self._refresh_slaves(dev_cfg)
-        self._refresh_parent_vlanid(dev_cfg)
-        self._refresh_speed_hwaddr(dev_cfg, state)
-        self._refresh_ap(dev_cfg, state)
-        self._refresh_device_cfg(dev_cfg)
-
-    def _refresh_device_cfg(self, dev_cfg):
-
-        if dev_cfg.device_type in self.wired_ui_device_types:
-            dt = "wired"
-        elif dev_cfg.device_type  == NM.DeviceType.WIFI:
-            dt = "wireless"
-
-        device = self.client.get_device_by_iface(dev_cfg.device_name)
-        if device:
-            ipv4cfg = device.get_ip4_config()
-            ipv6cfg = device.get_ip6_config()
-        else:
-            ipv4cfg = ipv6cfg = None
-
-        if ipv4cfg:
-            addr_str = " ".join("%s/%d" % (a.get_address(), a.get_prefix())
-                                           for a in ipv4cfg.get_addresses())
-            gateway_str = ipv4cfg.get_gateway()
-            dnss_str = " ".join(ipv4cfg.get_nameservers())
-        else:
-            addr_str = dnss_str = gateway_str = None
-        self._set_device_info_value(dt, "ipv4", addr_str)
-        self._set_device_info_value(dt, "dns", dnss_str)
-        self._set_device_info_value(dt, "route", gateway_str)
-
-        addr6_str = ""
-        if ipv6cfg:
-            addr6_str = " ".join("%s/%d" % (a.get_address(), a.get_prefix())
-                                            for a in ipv6cfg.get_addresses()
-                                            # Do not display link-local addresses
-                                            if not a.get_address().startswith("fe80:"))
-        self._set_device_info_value(dt, "ipv6", addr6_str.strip() or None)
-
-        if ipv4cfg and addr6_str:
-            self.builder.get_object("heading_%s_ipv4" % dt).set_label(_("IPv4 Address"))
-            self.builder.get_object("heading_%s_ipv6" % dt).set_label(_("IPv6 Address"))
-        elif ipv4cfg:
-            self.builder.get_object("heading_%s_ipv4" % dt).set_label(_("IP Address"))
-        elif addr6_str:
-            self.builder.get_object("heading_%s_ipv6" % dt).set_label(_("IP Address"))
-
-        return False
-
-    def _refresh_ap(self, dev_cfg, state=None):
-        if dev_cfg.device_type != NM.DeviceType.WIFI:
-            return
-
-        device = self.client.get_device_by_iface(dev_cfg.device_name)
-        if state is None:
-            state = device.get_state()
-        if state == NM.DeviceState.UNAVAILABLE:
-            ap_str = None
-        else:
-            active_ap = device.get_active_access_point()
-            if active_ap:
-                ap_str = self._ap_security_string(active_ap)
-            else:
-                ap_str = ""
-
-        self._set_device_info_value("wireless", "security", ap_str)
-
-        if state == NM.DeviceState.UNAVAILABLE:
-            self.builder.get_object("heading_wireless_network_name").hide()
-            self.builder.get_object("combobox_wireless_network_name").hide()
-        else:
-            self.builder.get_object("heading_wireless_network_name").show()
-            self.builder.get_object("combobox_wireless_network_name").show()
-
-            store = self.builder.get_object("liststore_wireless_network")
-            self._updating_device = True
-            store.clear()
-            aps = self._get_strongest_unique_aps(device.get_access_points())
-            for ap in aps:
-                self._add_ap(ap, active_ap == ap)
-            # TODO: add access point other...
-            if active_ap:
-                combobox = self.builder.get_object("combobox_wireless_network_name")
-                for i in combobox.get_model():
-                    if i[0] == active_ap:
-                        combobox.set_active_iter(i.iter)
-                        self.selected_ap = active_ap
-                        break
-            self._updating_device = False
-
-    def _refresh_slaves(self, dev_cfg):
-        if dev_cfg.device_type in [NM.DeviceType.BOND,
-                                   NM.DeviceType.TEAM,
-                                   NM.DeviceType.BRIDGE]:
-            slaves = ""
-            device = self.client.get_device_by_iface(dev_cfg.device_name)
-            if device:
-                slaves = ",".join(s.get_iface() for s in device.get_slaves())
-            self._set_device_info_value("wired", "slaves", slaves)
-
-    def _refresh_parent_vlanid(self, dev_cfg):
-        if dev_cfg.device_type == NM.DeviceType.VLAN:
-            parent = ""
-            vlanid = ""
-            device = self.client.get_device_by_iface(dev_cfg.device_name)
-            if device:
-                vlanid = device.get_vlan_id()
-                parent = device.get_parent().get_iface()
-            else:
-                con = self.client.get_connection_by_uuid(dev_cfg.connection_uuid)
-                if con:
-                    vlanid = con.get_setting_vlan().get_id()
-                    parent = con.get_setting_vlan().get_parent()
-            self._set_device_info_value("wired", "vlanid", str(vlanid))
-            self._set_device_info_value("wired", "parent", parent)
-
-    def _refresh_speed_hwaddr(self, dev_cfg, state=None):
-        dev_type = dev_cfg.device_type
-        if dev_type in self.wired_ui_device_types:
-            dt = "wired"
-        elif dev_type == NM.DeviceType.WIFI:
-            dt = "wireless"
-
-        device = self.client.get_device_by_iface(dev_cfg.device_name)
-
-        # Speed
-        speed = None
-        if device:
-            if dev_type == NM.DeviceType.ETHERNET:
-                speed = device.get_speed()
-            elif dev_type == NM.DeviceType.WIFI:
-                speed = device.get_bitrate() / 1000
-
-        if state is None and device:
-            state = device.get_state()
-
-        if not device or state == NM.DeviceState.UNAVAILABLE:
-            speed_str = None
-        elif speed:
-            speed_str = _("%d Mb/s") % speed
-        else:
-            speed_str = ""
-        self._set_device_info_value(dt, "speed", speed_str)
-
-        # Hardware address
-        hwaddr = device and device.get_hw_address()
-        self._set_device_info_value(dt, "mac", hwaddr)
-
-    def _refresh_device_type_page(self, dev_type):
-        notebook = self.builder.get_object("notebook_types")
-        if dev_type == NM.DeviceType.ETHERNET:
-            notebook.set_current_page(0)
-            self.builder.get_object("heading_wired_slaves").hide()
-            self.builder.get_object("label_wired_slaves").hide()
-            self.builder.get_object("heading_wired_vlanid").hide()
-            self.builder.get_object("label_wired_vlanid").hide()
-            self.builder.get_object("heading_wired_parent").hide()
-            self.builder.get_object("label_wired_parent").hide()
-            self.builder.get_object("remove_toolbutton").set_sensitive(False)
-        elif dev_type in [NM.DeviceType.BOND,
-                          NM.DeviceType.TEAM,
-                          NM.DeviceType.BRIDGE]:
-            notebook.set_current_page(0)
-            self.builder.get_object("heading_wired_slaves").show()
-            self.builder.get_object("label_wired_slaves").show()
-            self.builder.get_object("heading_wired_vlanid").hide()
-            self.builder.get_object("label_wired_vlanid").hide()
-            self.builder.get_object("heading_wired_parent").hide()
-            self.builder.get_object("label_wired_parent").hide()
-            self.builder.get_object("remove_toolbutton").set_sensitive(True)
-        elif dev_type == NM.DeviceType.VLAN:
-            notebook.set_current_page(0)
-            self.builder.get_object("heading_wired_slaves").hide()
-            self.builder.get_object("label_wired_slaves").hide()
-            self.builder.get_object("heading_wired_vlanid").show()
-            self.builder.get_object("label_wired_vlanid").show()
-            self.builder.get_object("heading_wired_parent").show()
-            self.builder.get_object("label_wired_parent").show()
-            self.builder.get_object("remove_toolbutton").set_sensitive(True)
-        elif dev_type == NM.DeviceType.WIFI:
-            notebook.set_current_page(1)
-            self.builder.get_object("button_wireless_options").set_sensitive(self.selected_ap is not None)
-
-    def _refresh_carrier_info(self):
-        for row in self.dev_cfg_store:
-            row[DEVICES_COLUMN_TITLE] = self._dev_title(row[DEVICES_COLUMN_OBJECT])
-
-    def _refresh_header_ui(self, dev_cfg, state=None):
-        if dev_cfg.device_type in self.wired_ui_device_types:
-            dev_type_str = "wired"
-        elif dev_cfg.device_type == NM.DeviceType.WIFI:
-            dev_type_str = "wireless"
-
-        if dev_type_str == "wired":
-            # update icon according to device status
-            img = self.builder.get_object("image_wired_device")
-            img.set_from_icon_name(self._dev_icon_name(dev_cfg), Gtk.IconSize.DIALOG)
-
-        # TODO: is this necessary? Isn't it static from glade?
-        device_type_label = _(self.device_type_name.get(dev_cfg.device_type, ""))
-        self.builder.get_object("label_%s_device" % dev_type_str).set_label(
-            "%s (%s)" % (device_type_label, dev_cfg.device_name))
-
-        device = self.client.get_device_by_iface(dev_cfg.device_name)
-        if state is None:
-            if not device:
-                state = NM.DeviceState.DISCONNECTED
-            else:
-                state = device.get_state()
-
-        self.builder.get_object("label_%s_status" % dev_type_str).set_label(
-            localized_string_of_device_state(device, state))
-
-        switch = self.builder.get_object("device_%s_off_switch" % dev_type_str)
-        if dev_type_str == "wired":
-            switch.set_visible(state not in (NM.DeviceState.UNAVAILABLE,
-                                             NM.DeviceState.UNMANAGED))
-            self._updating_device = True
-            switch.set_active(state not in (NM.DeviceState.UNMANAGED,
-                                            NM.DeviceState.UNAVAILABLE,
-                                            NM.DeviceState.DISCONNECTED,
-                                            NM.DeviceState.DEACTIVATING,
-                                            NM.DeviceState.FAILED))
-            self._updating_device = False
-        elif dev_type_str == "wireless":
-            self.on_wireless_enabled()
-
-    def _set_device_info_value(self, dev_type_str, info, value_str):
-        heading = self.builder.get_object("heading_%s_%s" % (dev_type_str, info))
-        value_label = self.builder.get_object("label_%s_%s" % (dev_type_str, info))
-        if value_str is None:
-            really_hide(heading)
-            really_hide(value_label)
-        else:
-            really_show(heading)
-            really_show(value_label)
-            value_label.set_label(value_str)
-
-    def _add_ap(self, ap, active=False):
-        ssid = ap.get_ssid()
-        if not ssid:
-            # get_ssid can return None if AP does not broadcast.
-            return
-        ssid = ssid.get_data()
-        if not ssid:
-            return
-
-        mode = ap.get_mode()
-        if not mode:
-            return
-
-        security = self._ap_security(ap)
-
-        store = self.builder.get_object("liststore_wireless_network")
-
-        # Decode the SSID (a byte sequence) into something resembling a string
-        ssid_str = NM.utils_ssid_to_utf8(ssid)
-
-        # the third column is for sorting
-        itr = store.append([ap,
-                            ssid_str,
-                            ssid_str,
-                            ap.get_strength(),
-                            mode,
-                            security])
-        if active:
-            self.builder.get_object("combobox_wireless_network_name").set_active_iter(itr)
-
-    def _get_strongest_unique_aps(self, access_points):
-        strongest_aps = {}
-        for ap in access_points:
-            if not ap.get_ssid():
-                # non-broadcasting AP. We don't do anything with these
-                continue
-            ssid = ap.get_ssid().get_data()
-            if ssid in strongest_aps:
-                if ap.get_strength() > strongest_aps[ssid].get_strength():
-                    strongest_aps[ssid] = ap
-            else:
-                strongest_aps[ssid] = ap
-
-        return strongest_aps.values()
-
-    def _ap_security(self, ap):
-        ty = NM_AP_SEC_UNKNOWN
-
-        flags = ap.get_flags()
-        wpa_flags = ap.get_wpa_flags()
-        rsn_flags = ap.get_rsn_flags()
-
-        if (not (flags & NM._80211ApFlags.PRIVACY) and
-            wpa_flags == NM._80211ApSecurityFlags.NONE and
-            rsn_flags == NM._80211ApSecurityFlags.NONE):
-            ty = NM_AP_SEC_NONE
-        elif (flags & NM._80211ApFlags.PRIVACY and
-              wpa_flags == NM._80211ApSecurityFlags.NONE and
-              rsn_flags == NM._80211ApSecurityFlags.NONE):
-            ty = NM_AP_SEC_WEP
-        elif (not (flags & NM._80211ApFlags.PRIVACY) and
-              wpa_flags != NM._80211ApSecurityFlags.NONE and
-              rsn_flags != NM._80211ApSecurityFlags.NONE):
-            ty = NM_AP_SEC_WPA
-        else:
-            ty = NM_AP_SEC_WPA2
-
-        return ty
-
-    def _ap_security_string(self, ap):
-
-        flags = ap.get_flags()
-        wpa_flags = ap.get_wpa_flags()
-        rsn_flags = ap.get_rsn_flags()
-
-        sec_str = ""
-
-        if ((flags & NM._80211ApFlags.PRIVACY) and
-            wpa_flags == NM._80211ApSecurityFlags.NONE and
-            rsn_flags == NM._80211ApSecurityFlags.NONE):
-            sec_str += "%s, " % _("WEP")
-
-        if wpa_flags != NM._80211ApSecurityFlags.NONE:
-            sec_str += "%s, " % _("WPA")
-
-        if rsn_flags != NM._80211ApSecurityFlags.NONE:
-            sec_str += "%s, " % _("WPA2")
-
-        if ((wpa_flags & NM._80211ApSecurityFlags.KEY_MGMT_802_1X) or
-            (rsn_flags & NM._80211ApSecurityFlags.KEY_MGMT_802_1X)):
-            sec_str += "%s, " % _("Enterprise")
-
-        if sec_str:
-            sec_str = sec_str[:-2]
-        else:
-            sec_str = _("None")
-
-        return sec_str
-
-    def _ap_is_enterprise(self, ap):
-        wpa_flags = ap.get_wpa_flags()
-        rsn_flags = ap.get_rsn_flags()
-        return ((wpa_flags & NM._80211ApSecurityFlags.KEY_MGMT_802_1X) or
-                (rsn_flags & NM._80211ApSecurityFlags.KEY_MGMT_802_1X))
-
-    @property
-    def hostname(self):
-        return self.entry_hostname.get_text()
-
-    @hostname.setter
-    def hostname(self, value):
-        if not value:
-            return
-        self.entry_hostname.set_text(value)
-
-    @property
-    def current_hostname(self):
-        return self.label_current_hostname.get_text()
-
-    @current_hostname.setter
-    def current_hostname(self, value):
-        if not value:
-            return
-        self.label_current_hostname.set_text(value)
-
-    def disconnect_client_callbacks(self):
-        for cb in [self.on_wireless_enabled, self.on_nm_state_changed]:
-            _try_disconnect(self.client, cb)
-
-        for device in self.client.get_devices():
-            _try_disconnect(device, self.on_device_config_changed)
-            _try_disconnect(device, self.on_device_state_changed)
-            _try_disconnect(device, self.on_ip_obj_changed)
-            for config in self._get_ip_configs(device):
-                _try_disconnect(config, self.on_config_changed)
-
-        self._network_module.DeviceConfigurationChanged.disconnect(
-            self.on_device_configurations_changed
-        )
-
-    def _get_ip_configs(self, device):
-        out = []
-        try:
-            out.append(self.props.ip4_config)
-        except AttributeError:
-            pass
-        try:
-            out.append(self.props.ip6_config)
-        except AttributeError:
-            pass
-
-        return out
-
-
-def _try_disconnect(obj, callback):
-    try:
-        obj.disconnect_by_func(callback)
-    except TypeError as e:
-        if "nothing connected" not in str(e):
-            log.debug("%s", e)
-
-
-class SecretAgentDialog(GUIObject):
-    builderObjects = ["secret_agent_dialog"]
-    mainWidgetName = "secret_agent_dialog"
-    uiFile = "spokes/network.glade"
-
-    def __init__(self, *args, **kwargs):
-        self._content = kwargs.pop('content', {})
-        super().__init__(*args, **kwargs)
-        self.builder.get_object("label_message").set_text(self._content['message'])
-        self._connect_button = self.builder.get_object("connect_button")
-
-    def initialize(self):
-        self._entries = {}
-        grid = Gtk.Grid()
-        grid.set_row_spacing(6)
-        grid.set_column_spacing(6)
-
-        for row, secret in enumerate(self._content['secrets']):
-            label = Gtk.Label(label=secret['label'], halign=Gtk.Align.START)
-            entry = Gtk.Entry(hexpand=True)
-            entry.set_text(secret['value'])
-            if secret['key']:
-                self._entries[secret['key']] = entry
-            else:
-                entry.set_sensitive(False)
-            if secret['password']:
-                entry.set_visibility(False)
-            self._validate(entry, secret)
-            entry.connect("changed", self._validate, secret)
-            entry.connect("activate", self._password_entered_cb)
-            label.set_use_underline(True)
-            label.set_mnemonic_widget(entry)
-            grid.attach(label, 0, row, 1, 1)
-            grid.attach(entry, 1, row, 1, 1)
-
-        self.builder.get_object("password_box").add(grid)
-
-    def run(self):
-        self.initialize()
-        self.window.show_all()
-        rc = self.window.run()
-        for secret in self._content['secrets']:
-            if secret['key']:
-                secret['value'] = self._entries[secret['key']].get_text()
-        self.window.destroy()
-        return rc
-
-    @property
-    def valid(self):
-        return all(secret.get('valid', False) for secret in self._content['secrets'])
-
-    def _validate(self, entry, secret):
-        secret['value'] = entry.get_text()
-        if secret['validate']:
-            secret['valid'] = secret['validate'](secret)
-        else:
-            secret['valid'] = len(secret['value']) > 0
-        self._update_connect_button()
-
-    def _password_entered_cb(self, entry):
-        if self._connect_button.get_sensitive() and self.valid:
-            self.window.response(1)
-
-    def _update_connect_button(self):
-        self._connect_button.set_sensitive(self.valid)
-
-
-secret_agent = None
-
-
-class NotAuthorizedException(dbus.DBusException):
-    _dbus_error_name = SECRET_AGENT_IFACE + '.NotAuthorized'
-
-
-class SecretAgent(dbus.service.Object):
-    def __init__(self, spoke):
-        self._bus = dbus.SystemBus()
-        self.spoke = spoke
-        super().__init__(self._bus, "/org/freedesktop/NetworkManager/SecretAgent")
-
-    @dbus.service.method(SECRET_AGENT_IFACE,
-                         in_signature='a{sa{sv}}osasb',
-                         out_signature='a{sa{sv}}',
-                         sender_keyword='sender')
-    def GetSecrets(self, connection_hash, connection_path, setting_name, hints, flags, sender=None):
-        if not sender:
-            raise NotAuthorizedException("Internal error: couldn't get sender")
-        uid = self._bus.get_unix_user(sender)
-        if uid != 0:
-            raise NotAuthorizedException("UID %d not authorized" % uid)
-
-        log.debug("secrets requested path '%s' setting '%s' hints '%s' new %d",
-                  connection_path, setting_name, str(hints), flags)
-        if not (flags & NM_SECRET_AGENT_GET_SECRETS_FLAG_ALLOW_INTERACTION):
-            return
-
-        content = self._get_content(setting_name, connection_hash)
-        dialog = SecretAgentDialog(self.spoke.data, content=content)
-        with self.spoke.main_window.enlightbox(dialog.window):
-            rc = dialog.run()
-
-        secrets = dbus.Dictionary()
-        if rc == 1:
-            for secret in content['secrets']:
-                if secret['key']:
-                    secrets[secret['key']] = secret['value']
-
-        settings = dbus.Dictionary({setting_name: secrets})
-
-        return settings
-
-    def _get_content(self, setting_name, connection_hash):
-        content = {}
-        connection_type = connection_hash['connection']['type']
-        if connection_type == "802-11-wireless":
-            content['title'] = _("Authentication required by wireless network")
-            content['message'] = _("Passwords or encryption keys are required to access\n"
-                                   "the wireless network '%(network_id)s'.") \
-                                   % {'network_id':str(connection_hash['connection']['id'])}
-            content['secrets'] = self._get_wireless_secrets(setting_name, connection_hash)
-        else:
-            log.info("Connection type %s not supported by secret agent", connection_type)
-
-        return content
-
-    def _get_wireless_secrets(self, setting_name, connection_hash):
-        key_mgmt = connection_hash['802-11-wireless-security']['key-mgmt']
-        original_secrets = connection_hash[setting_name]
-        secrets = []
-        if key_mgmt in ['wpa-none', 'wpa-psk']:
-            secrets.append({'label'     : C_('GUI|Network|Secrets Dialog', '_Password:'),
-                            'key'      : 'psk',
-                            'value'    : original_secrets.get('psk', ''),
-                            'validate' : self._validate_wpapsk,
-                            'password' : True})
-        # static WEP
-        elif key_mgmt == 'none':
-            key_idx = str(original_secrets.get('wep_tx_keyidx', '0'))
-            secrets.append({'label'     : C_('GUI|Network|Secrets Dialog', '_Key:'),
-                            'key'      : 'wep-key%s' % key_idx,
-                            'value'    : original_secrets.get('wep-key%s' % key_idx, ''),
-                            'wep_key_type': original_secrets.get('wep-key-type', ''),
-                            'validate' : self._validate_staticwep,
-                            'password' : True})
-        # WPA-Enterprise
-        elif key_mgmt == 'wpa-eap':
-            eap = original_secrets['eap'][0]
-            if eap in ('md5', 'leap', 'ttls', 'peap'):
-                secrets.append({'label'    : _('User name: '),
-                                'key'      : None,
-                                'value'    : original_secrets.get('identity', ''),
-                                'validate' : None,
-                                'password' : False})
-                secrets.append({'label'    : _('Password: '),
-                                'key'      : 'password',
-                                'value'    : original_secrets.get('password', ''),
-                                'validate' : None,
-                                'password' : True})
-            elif eap == 'tls':
-                secrets.append({'label'    : _('Identity: '),
-                                'key'      : None,
-                                'value'    : original_secrets.get('identity', ''),
-                                'validate' : None,
-                                'password' : False})
-                secrets.append({'label'    : _('Private key password: '),
-                                'key'      : 'private-key-password',
-                                'value'    : original_secrets.get('private-key-password', ''),
-                                'validate' : None,
-                                'password' : True})
-        else:
-            log.info("Unsupported wireless key management: %s", key_mgmt)
-
-        return secrets
-
-    def _validate_wpapsk(self, secret):
-        value = secret['value']
-        if len(value) == 64:
-            # must be composed of hexadecimal digits only
-            return all(c in string.hexdigits for c in value)
-        else:
-            return 8 <= len(value) <= 63
-
-    def _validate_staticwep(self, secret):
-        value = secret['value']
-        if secret['wep_key_type'] == NM.WepKeyType.KEY:
-            if len(value) in (10, 26):
-                return all(c in string.hexdigits for c in value)
-            elif len(value) in (5, 13):
-                return all(c in string.ascii_letters for c in value)
-            else:
-                return False
-        elif secret['wep_key_type'] == NM.WepKeyType.PASSPHRASE:
-            return 0 <= len(value) <= 64
-        else:
-            return True
-
-
-def register_secret_agent(spoke):
-
-    if not conf.system.can_configure_network:
-        return False
-
-    global secret_agent
-    if not secret_agent:
-        # Ignore an error from pylint incorrectly analyzing types in dbus-python
-        secret_agent = SecretAgent(spoke) # pylint: disable=no-value-for-parameter
-        bus = dbus.SystemBus()
-        proxy = bus.get_object(NM_SERVICE, AGENT_MANAGER_PATH)
-        proxy.Register("anaconda", dbus_interface=AGENT_MANAGER_IFACE)
-    else:
-        secret_agent.spoke = spoke
-
-    return True
-
-
-class NetworkSpoke(FirstbootSpokeMixIn, NormalSpoke):
-    """
-       .. inheritance-diagram:: NetworkSpoke
-          :parts: 3
-    """
-    builderObjects = ["networkWindow", "liststore_wireless_network", "liststore_devices", "add_device_dialog", "liststore_add_device"]
-    mainWidgetName = "networkWindow"
-    uiFile = "spokes/network.glade"
-    helpFile = "NetworkSpoke.xml"
-
-    title = CN_("GUI|Spoke", "_Network & Host Name")
-    icon = "network-transmit-receive-symbolic"
-
-    category = SystemCategory
-
-    def __init__(self, *args, **kwargs):
-        NormalSpoke.__init__(self, *args, **kwargs)
-        self.networking_changed = False
-        self._network_module = NETWORK.get_proxy()
-        self._nm_client = network.get_nm_client()
-        self.network_control_box = NetworkControlBox(self.builder, self._nm_client, self._network_module, spoke=self)
-        self.network_control_box.hostname = self._network_module.Hostname
-        self.network_control_box.current_hostname = self._network_module.GetCurrentHostname()
-        self._network_module.CurrentHostnameChanged.connect(self._hostname_changed)
-        self.network_control_box.connect("nm-state-changed",
-                                         self.on_nm_state_changed)
-        self.network_control_box.connect("device-state-changed",
-                                         self.on_device_state_changed)
-        self.network_control_box.connect("apply-hostname",
-                                         self.on_apply_hostname)
-
-    def _hostname_changed(self, hostname):
-        gtk_call_once(self._update_hostname)
-
-    def apply(self):
-        # Inform network module that device configurations might have been changed
-        # and we want to generate kickstart from device configurations
-        # (persistent NM / ifcfg configuration), instead of using original kickstart.
-        self._network_module.NetworkDeviceConfigurationChanged()
-        self._network_module.SetHostname(self.network_control_box.hostname)
-
-        # if installation media or hdd aren't used and settings have changed
-        # try if source is available
-        if self.networking_changed:
-            if self.payload and self.payload.needs_network:
-                if ANACONDA_ENVIRON in anaconda_flags.environs:
-                    log.debug("network spoke (apply), network configuration changed - restarting payload thread")
-                    from pyanaconda.payload.manager import payloadMgr
-                    payloadMgr.restart_thread(self.payload, fallback=not anaconda_flags.automatedInstall, onlyOnChange=True)
-                else:
-                    log.debug("network spoke (apply), network configuration changed - "
-                              "skipping restart of payload thread, outside of Anaconda environment")
-            else:
-                log.debug("network spoke (apply), network configuration changed - "
-                          "skipping restart of payload thread, payload does not need network")
-        self.networking_changed = False
-
-        self.network_control_box.kill_nmce(msg="leaving network spoke")
-
-    @property
-    def completed(self):
-        # TODO: check also if source requires updates when implemented
-        # If we can't configure network, don't require it
-        return (not conf.system.can_configure_network
-                or self._network_module.GetActivatedInterfaces())
-
-    @property
-    def mandatory(self):
-        # the network spoke should be mandatory only if it is running
-        # during the installation and if the installation source requires network
-        return ANACONDA_ENVIRON in anaconda_flags.environs and self.payload.needs_network
-
-    @property
-    def status(self):
-        """ A short string describing which devices are connected. """
-        return network.status_message(self._nm_client)
-
-    def initialize(self):
-        register_secret_agent(self)
-        NormalSpoke.initialize(self)
-        self.initialize_start()
-        self.network_control_box.initialize()
-        if not conf.system.can_configure_network:
-            self.builder.get_object("network_config_vbox").set_no_show_all(True)
-            self.builder.get_object("network_config_vbox").hide()
-        else:
-            self.builder.get_object("live_hint_label").set_no_show_all(True)
-            self.builder.get_object("live_hint_label").hide()
-
-        # report that we are done
-        self.initialize_done()
-
-    def refresh(self):
-        NormalSpoke.refresh(self)
-        self.network_control_box.refresh()
-        self.network_control_box.current_hostname = self._network_module.GetCurrentHostname()
-
-    def on_nm_state_changed(self, *args):
-        gtk_call_once(self._update_status)
-        # TODO MOD replace and test - will NM updating hostname from dhcp being
-        # estabilished be propagated to module via hostnamed?
-        gtk_call_once(self._update_hostname)
-
-    def on_device_state_changed(self, source, device, new_state, *args):
-        if new_state in (NM.DeviceState.ACTIVATED,
-                         NM.DeviceState.DISCONNECTED,
-                         NM.DeviceState.UNAVAILABLE):
-            gtk_call_once(self._update_status)
-
-    def on_apply_hostname(self, *args):
-        hostname = self.network_control_box.hostname
-        (valid, error) = network.is_valid_hostname(hostname, local=True)
-        if not valid:
-            self.clear_info()
-            msg = _("Host name is not valid: %s") % error
-            self.set_warning(msg)
-            self.network_control_box.entry_hostname.grab_focus()
-        else:
-            self.clear_info()
-            if conf.system.can_change_hostname:
-                self._network_module.SetCurrentHostname(hostname)
-
-    def _update_status(self):
-        hubQ.send_message(self.__class__.__name__, self.status)
-
-    def _update_hostname(self):
-        self.network_control_box.current_hostname = self._network_module.GetCurrentHostname()
-
-    def on_back_clicked(self, button):
-        hostname = self.network_control_box.hostname
-        (valid, error) = network.is_valid_hostname(hostname, local=True)
-        if not valid:
-            self.clear_info()
-            msg = _("Host name is not valid: %s") % error
-            self.set_warning(msg)
-            self.network_control_box.entry_hostname.grab_focus()
-        else:
-            self.clear_info()
-            NormalSpoke.on_back_clicked(self, button)
-
-    def finished(self):
-        """Disconnect callbacks
-
-        Called when leaving summary hub
-        """
-        self.network_control_box.kill_nmce(msg="finished with network spoke")
-        self.network_control_box.disconnect_client_callbacks()
-
-
-class NetworkStandaloneSpoke(StandaloneSpoke):
-    """
-       .. inheritance-diagram:: NetworkStandaloneSpoke
-          :parts: 3
-    """
-    builderObjects = ["networkStandaloneWindow", "networkControlBox_vbox", "liststore_wireless_network", "liststore_devices", "add_device_dialog", "liststore_add_device"]
-    mainWidgetName = "networkStandaloneWindow"
-    uiFile = "spokes/network.glade"
-
-    preForHub = SummaryHub
-    priority = 10
-
-    def __init__(self, *args, **kwargs):
-        super().__init__(*args, **kwargs)
-        self._network_module = NETWORK.get_proxy()
-        self._nm_client = network.get_nm_client()
-        self.network_control_box = NetworkControlBox(self.builder, self._nm_client, self._network_module, spoke=self)
-
-        self.network_control_box.hostname = self._network_module.Hostname
-        self.network_control_box.current_hostname = self._network_module.GetCurrentHostname()
-        self._network_module.CurrentHostnameChanged.connect(self._hostname_changed)
-
-        parent = self.builder.get_object("AnacondaStandaloneWindow-action_area5")
-        parent.add(self.network_control_box.vbox)
-
-        self.network_control_box.connect("nm-state-changed",
-                                         self.on_nm_state_changed)
-        self.network_control_box.connect("apply-hostname",
-                                         self.on_apply_hostname)
-
-        self._initially_available = self.completed
-        log.debug("network standalone spoke (init): completed: %s", self._initially_available)
-        self._now_available = False
-
-    def _hostname_changed(self, hostname):
-        gtk_call_once(self._update_hostname)
-
-    def apply(self):
-        # Inform network module that device configurations might have been changed
-        # and we want to generate kickstart from device configurations
-        # (persistent NM / ifcfg configuration), instead of using original kickstart.
-        self._network_module.NetworkDeviceConfigurationChanged()
-        self._network_module.SetHostname(self.network_control_box.hostname)
-
-        self._now_available = self.completed
-
-        log.debug("network standalone spoke (apply) payload: %s completed: %s", self.payload.base_repo, self._now_available)
-        if (not self.payload.base_repo and not self._initially_available
-            and self._now_available and self.payload.needs_network):
-            from pyanaconda.payload.manager import payloadMgr
-            payloadMgr.restart_thread(self.payload, fallback=not anaconda_flags.automatedInstall)
-
-        self.network_control_box.kill_nmce(msg="leaving standalone network spoke")
-        self.network_control_box.disconnect_client_callbacks()
-
-    @property
-    def completed(self):
-        # If we can't configure network, don't require it
-        return (not conf.system.can_configure_network
-                or self._network_module.GetActivatedInterfaces()
-                or self.data.method.method not in ("url", "nfs"))
-
-    def initialize(self):
-        register_secret_agent(self)
-        super().initialize()
-        self.network_control_box.initialize()
-
-    def refresh(self):
-        super().refresh()
-        self.network_control_box.refresh()
-        self.network_control_box.current_hostname = self._network_module.GetCurrentHostname()
-
-    def _on_continue_clicked(self, window, user_data=None):
-        hostname = self.network_control_box.hostname
-        (valid, error) = network.is_valid_hostname(hostname, local=True)
-        if not valid:
-            self.clear_info()
-            msg = _("Host name is not valid: %s") % error
-            self.set_warning(msg)
-            self.network_control_box.entry_hostname.grab_focus()
-        else:
-            self.clear_info()
-            StandaloneSpoke._on_continue_clicked(self, window, user_data)
-
-    # Use case: slow dhcp has connected when on spoke
-    def on_nm_state_changed(self, *args):
-        # TODO MOD replace and test - will NM updating hostname from dhcp being
-        # estabilished be propagated to module via hostnamed?
-        gtk_call_once(self._update_hostname)
-
-    def on_apply_hostname(self, *args):
-        hostname = self.network_control_box.hostname
-        (valid, error) = network.is_valid_hostname(hostname, local=True)
-        if not valid:
-            self.clear_info()
-            msg = _("Host name is not valid: %s") % error
-            self.set_warning(msg)
-            self.network_control_box.entry_hostname.grab_focus()
-        else:
-            self.clear_info()
-            if conf.system.can_change_hostname:
-                self._network_module.SetCurrentHostname(hostname)
-
-    def _update_hostname(self):
-        self.network_control_box.current_hostname = self._network_module.GetCurrentHostname()
diff --git a/pyanaconda/ui/tui/spokes/network.py b/pyanaconda/ui/tui/spokes/network.py
deleted file mode 100644
index 12bda02a9..000000000
--- a/pyanaconda/ui/tui/spokes/network.py
+++ /dev/null
@@ -1,620 +0,0 @@
-# Network configuration spoke classes
-#
-# Copyright (C) 2013  Red Hat, Inc.
-#
-# This copyrighted material is made available to anyone wishing to use,
-# modify, copy, or redistribute it subject to the terms and conditions of
-# the GNU General Public License v.2, or (at your option) any later version.
-# This program is distributed in the hope that it will be useful, but WITHOUT
-# ANY WARRANTY expressed or implied, including the implied warranties of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
-# Public License for more details.  You should have received a copy of the
-# GNU General Public License along with this program; if not, write to the
-# Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
-# 02110-1301, USA.  Any Red Hat trademarks that are incorporated in the
-# source code or documentation are not subject to the GNU General Public
-# License and may only be used or replicated with the express permission of
-# Red Hat, Inc.
-#
-
-import gi
-gi.require_version("NM", "1.0")
-from gi.repository import NM
-
-import socket
-
-from pyanaconda import network
-from pyanaconda.core.configuration.anaconda import conf
-from pyanaconda.modules.common.constants.services import NETWORK
-from pyanaconda.modules.common.structures.network import NetworkDeviceConfiguration
-from pyanaconda.flags import flags
-from pyanaconda.ui.categories.system import SystemCategory
-from pyanaconda.ui.tui.spokes import NormalTUISpoke
-from pyanaconda.ui.tui.tuiobject import Dialog, report_if_failed
-from pyanaconda.ui.common import FirstbootSpokeMixIn
-from pyanaconda.core.i18n import N_, _, C_
-
-from pyanaconda.core.regexes import IPV4_PATTERN_WITH_ANCHORS, IPV4_NETMASK_WITH_ANCHORS, IPV4_OR_DHCP_PATTERN_WITH_ANCHORS
-from pyanaconda.core.constants import ANACONDA_ENVIRON
-
-from pyanaconda.anaconda_loggers import get_module_logger
-
-from simpleline.render.containers import ListColumnContainer
-from simpleline.render.screen import InputState
-from simpleline.render.screen_handler import ScreenHandler
-from simpleline.render.widgets import TextWidget, CheckboxWidget, EntryWidget
-
-log = get_module_logger(__name__)
-
-# This will be used in decorators in ConfigureDeviceSpoke.
-# The decorators are processed before the class is created so you can have this as a variable there.
-IP_ERROR_MSG = N_("Bad format of the IP address")
-NETMASK_ERROR_MSG = N_("Bad format of the netmask")
-
-__all__ = ["NetworkSpoke"]
-
-
-# TODO: use our own datastore?
-class WiredTUIConfigurationData():
-    """Holds tui input configuration data of wired device."""
-    def __init__(self):
-        self.ip = "dhcp"
-        self.netmask = ""
-        self.gateway = ""
-        self.ipv6 = "auto"
-        self.ipv6gateway = ""
-        self.nameserver = ""
-        self.onboot = False
-
-    def set_from_connection(self, connection):
-        """Set the object from NM RemoteConnection.
-
-        :param connection: connection to be used to set the object
-        :type connection: NM.RemoteConnection
-        """
-        connection_uuid = connection.get_uuid()
-
-        ip4_config = connection.get_setting_ip4_config()
-        ip4_method = ip4_config.get_method()
-        if ip4_method == NM.SETTING_IP4_CONFIG_METHOD_AUTO:
-            self.ip = "dhcp"
-        elif ip4_method == NM.SETTING_IP4_CONFIG_METHOD_MANUAL:
-            if ip4_config.get_num_addresses() > 0:
-                addr = ip4_config.get_address(0)
-                self.ip = addr.get_address()
-                self.netmask = network.prefix_to_netmask(addr.get_prefix())
-            else:
-                log.error("No ip4 address found for manual method in %s", connection_uuid)
-        elif ip4_method == NM.SETTING_IP4_CONFIG_METHOD_DISABLED:
-            self.ip = ""
-        else:
-            log.error("Unexpected ipv4 method %s found in connection %s", ip4_method, connection_uuid)
-            self.ip = "dhcp"
-        self.gateway = ip4_config.get_gateway() or ""
-
-        ip6_config = connection.get_setting_ip6_config()
-        ip6_method = ip6_config.get_method()
-        if ip6_method == NM.SETTING_IP6_CONFIG_METHOD_AUTO:
-            self.ipv6 = "auto"
-        elif ip6_method == NM.SETTING_IP6_CONFIG_METHOD_IGNORE:
-            self.ipv6 = "ignore"
-        elif ip6_method == NM.SETTING_IP6_CONFIG_METHOD_DHCP:
-            self.ipv6 = "dhcp"
-        elif ip6_method == NM.SETTING_IP6_CONFIG_METHOD_MANUAL:
-            if ip6_config.get_num_addresses() > 0:
-                addr = ip6_config.get_address(0)
-                self.ipv6 = "{}/{}".format(addr.get_address(), addr.get_prefix())
-            else:
-                log.error("No ip6 address found for manual method in %s", connection_uuid)
-        else:
-            log.error("Unexpected ipv6 method %s found in connection %s", ip6_method, connection_uuid)
-            self.ipv6 = "auto"
-        self.ipv6gateway = ip6_config.get_gateway() or ""
-
-        nameservers = []
-        for i in range(0, ip4_config.get_num_dns()):
-            nameservers.append(ip4_config.get_dns(i))
-        for i in range(0, ip6_config.get_num_dns()):
-            nameservers.append(ip6_config.get_dns(i))
-        self.nameserver = ",".join(nameservers)
-
-        self.onboot = connection.get_setting_connection().get_autoconnect()
-
-    def update_connection(self, connection):
-        """Update NM RemoteConnection from the object.
-
-        :param connection: connection to be updated from the object
-        :type connection: NM.RemoteConnection
-        """
-        # ipv4 settings
-        if self.ip == "dhcp":
-            method4 = NM.SETTING_IP4_CONFIG_METHOD_AUTO
-        elif self.ip:
-            method4 = NM.SETTING_IP4_CONFIG_METHOD_MANUAL
-        else:
-            method4 = NM.SETTING_IP4_CONFIG_METHOD_DISABLED
-
-        connection.remove_setting(NM.SettingIP4Config)
-        s_ip4 = NM.SettingIP4Config.new()
-        s_ip4.set_property(NM.SETTING_IP_CONFIG_METHOD, method4)
-        if method4 == NM.SETTING_IP4_CONFIG_METHOD_MANUAL:
-            prefix4 = network.netmask_to_prefix(self.netmask)
-            addr4 = NM.IPAddress.new(socket.AF_INET, self.ip, prefix4)
-            s_ip4.add_address(addr4)
-            if self.gateway:
-                s_ip4.props.gateway = self.gateway
-        connection.add_setting(s_ip4)
-
-        # ipv6 settings
-        if self.ipv6 == "ignore":
-            method6 = NM.SETTING_IP6_CONFIG_METHOD_IGNORE
-        elif not self.ipv6 or self.ipv6 == "auto":
-            method6 = NM.SETTING_IP6_CONFIG_METHOD_AUTO
-        elif self.ipv6 == "dhcp":
-            method6 = NM.SETTING_IP6_CONFIG_METHOD_DHCP
-        else:
-            method6 = NM.SETTING_IP6_CONFIG_METHOD_MANUAL
-
-        connection.remove_setting(NM.SettingIP6Config)
-        s_ip6 = NM.SettingIP6Config.new()
-        s_ip6.set_property(NM.SETTING_IP_CONFIG_METHOD, method6)
-        if method6 == NM.SETTING_IP6_CONFIG_METHOD_MANUAL:
-            addr6, _slash, prefix6 = self.ipv6.partition("/")
-            if prefix6:
-                prefix6 = int(prefix6)
-            else:
-                prefix6 = 64
-            addr6 = NM.IPAddress.new(socket.AF_INET6, addr6, prefix6)
-            s_ip6.add_address(addr6)
-            if self.ipv6gateway:
-                s_ip6.props.gateway = self.ipv6gateway
-        connection.add_setting(s_ip6)
-
-        # nameservers
-        if self.nameserver:
-            for ns in [str.strip(i) for i in self.nameserver.split(",")]:
-                if NM.utils_ipaddr_valid(socket.AF_INET6, ns):
-                    s_ip6.add_dns(ns)
-                elif NM.utils_ipaddr_valid(socket.AF_INET, ns):
-                    s_ip4.add_dns(ns)
-                else:
-                    log.error("IP address %s is not valid", ns)
-
-        s_con = connection.get_setting_connection()
-        s_con.set_property(NM.SETTING_CONNECTION_AUTOCONNECT, self.onboot)
-
-    def __str__(self):
-        return "WiredTUIConfigurationData ip:{} netmask:{} gateway:{} ipv6:{} ipv6gateway:{} " \
-            "nameserver:{} onboot:{}".format(self.ip, self.netmask, self.gateway, self.ipv6,
-                                             self.ipv6gateway, self.nameserver, self.onboot)
-
-
-class NetworkSpoke(FirstbootSpokeMixIn, NormalTUISpoke):
-    """ Spoke used to configure network settings.
-
-       .. inheritance-diagram:: NetworkSpoke
-          :parts: 3
-    """
-    helpFile = "NetworkSpoke.txt"
-    category = SystemCategory
-    configurable_device_types = [
-        NM.DeviceType.ETHERNET,
-        NM.DeviceType.INFINIBAND,
-    ]
-
-    def __init__(self, data, storage, payload):
-        NormalTUISpoke.__init__(self, data, storage, payload)
-        self.title = N_("Network configuration")
-        self._network_module = NETWORK.get_proxy()
-
-        self.nm_client = network.get_nm_client()
-        if not self.nm_client and conf.system.provides_system_bus:
-            self.nm_client = NM.Client.new(None)
-
-        self._container = None
-        self.hostname = self._network_module.Hostname
-        self.editable_configurations = []
-        self.errors = []
-        self._apply = False
-
-    @classmethod
-    def should_run(cls, environment, data):
-        return conf.system.can_configure_network
-
-    def initialize(self):
-        self.initialize_start()
-        NormalTUISpoke.initialize(self)
-        self._update_editable_configurations()
-        self._network_module.DeviceConfigurationChanged.connect(self._device_configurations_changed)
-        self.initialize_done()
-
-    def _device_configurations_changed(self, device_configurations):
-        log.debug("device configurations changed: %s", device_configurations)
-        self._update_editable_configurations()
-
-    def _update_editable_configurations(self):
-        device_configurations = self._network_module.GetDeviceConfigurations()
-        self.editable_configurations = [NetworkDeviceConfiguration.from_structure(dc)
-                                        for dc in device_configurations
-                                        if dc['device-type'] in self.configurable_device_types]
-
-    @property
-    def completed(self):
-        """ Check whether this spoke is complete or not."""
-        # If we can't configure network, don't require it
-        return (not conf.system.can_configure_network
-                or self._network_module.GetActivatedInterfaces())
-
-    @property
-    def mandatory(self):
-        # the network spoke should be mandatory only if it is running
-        # during the installation and if the installation source requires network
-        return ANACONDA_ENVIRON in flags.environs and self.payload.needs_network
-
-    @property
-    def status(self):
-        """ Short msg telling what devices are active. """
-        return network.status_message(self.nm_client)
-
-    def _summary_text(self):
-        """Devices cofiguration shown to user."""
-        msg = ""
-        activated_devs = self._network_module.GetActivatedInterfaces()
-        for device_configuration in self.editable_configurations:
-            name = device_configuration.device_name
-            if name in activated_devs:
-                msg += self._activated_device_msg(name)
-            else:
-                msg += _("Wired (%(interface_name)s) disconnected\n") \
-                       % {"interface_name": name}
-        return msg
-
-    def _activated_device_msg(self, devname):
-        msg = _("Wired (%(interface_name)s) connected\n") \
-              % {"interface_name": devname}
-
-        device = self.nm_client.get_device_by_iface(devname)
-        if device:
-            addr_str = dnss_str = gateway_str = netmask_str = ""
-            ipv4config = device.get_ip4_config()
-            if ipv4config:
-                addresses = ipv4config.get_addresses()
-                if addresses:
-                    a0 = addresses[0]
-                    addr_str = a0.get_address()
-                    prefix = a0.get_prefix()
-                    netmask_str = network.prefix_to_netmask(prefix)
-                gateway_str = ipv4config.get_gateway() or ''
-                dnss_str = ",".join(ipv4config.get_nameservers())
-            msg += _(" IPv4 Address: %(addr)s Netmask: %(netmask)s Gateway: %(gateway)s\n") % \
-                {"addr": addr_str, "netmask": netmask_str, "gateway": gateway_str}
-            msg += _(" DNS: %s\n") % dnss_str
-
-            ipv6config = device.get_ip6_config()
-            if ipv6config:
-                for address in ipv6config.get_addresses():
-                    addr_str = address.get_address()
-                    prefix = address.get_prefix()
-                    # Do not display link-local addresses
-                    if not addr_str.startswith("fe80:"):
-                        msg += _(" IPv6 Address: %(addr)s/%(prefix)d\n") % \
-                            {"addr": addr_str, "prefix": prefix}
-        return msg
-
-    def refresh(self, args=None):
-        """ Refresh screen. """
-        NormalTUISpoke.refresh(self, args)
-
-        self._container = ListColumnContainer(1, columns_width=78, spacing=1)
-
-        if not self.nm_client:
-            self.window.add_with_separator(TextWidget(_("Network configuration is not available.")))
-            return
-
-        summary = self._summary_text()
-        self.window.add_with_separator(TextWidget(summary))
-
-        hostname = _("Host Name: %s\n") % self._network_module.Hostname
-        self.window.add_with_separator(TextWidget(hostname))
-        current_hostname = _("Current host name: %s\n") % self._network_module.GetCurrentHostname()
-        self.window.add_with_separator(TextWidget(current_hostname))
-
-        # if we have any errors, display them
-        while len(self.errors) > 0:
-            self.window.add_with_separator(TextWidget(self.errors.pop()))
-
-        dialog = Dialog(_("Host Name"))
-        self._container.add(TextWidget(_("Set host name")), callback=self._set_hostname_callback, data=dialog)
-
-        for device_configuration in self.editable_configurations:
-            iface = device_configuration.device_name
-            text = (_("Configure device %s") % iface)
-            self._container.add(TextWidget(text), callback=self._ensure_connection_and_configure,
-                                data=iface)
-
-        self.window.add_with_separator(self._container)
-
-    def _set_hostname_callback(self, dialog):
-        self.hostname = dialog.run()
-        self.redraw()
-        self.apply()
-
-    def _ensure_connection_and_configure(self, iface):
-        for device_configuration in self.editable_configurations:
-            if device_configuration.device_name == iface:
-                connection_uuid = device_configuration.connection_uuid
-                if connection_uuid:
-                    self._configure_connection(iface, connection_uuid)
-                else:
-                    device_type = self.nm_client.get_device_by_iface(iface).get_device_type()
-                    connection = get_default_connection(iface, device_type)
-                    connection_uuid = connection.get_uuid()
-                    log.debug("adding default connection %s for %s", connection_uuid, iface)
-                    data = (iface, connection_uuid)
-                    self.nm_client.add_connection2(
-                        connection.to_dbus(NM.ConnectionSerializationFlags.ALL),
-                        (NM.SettingsAddConnection2Flags.TO_DISK |
-                         NM.SettingsAddConnection2Flags.BLOCK_AUTOCONNECT),
-                        None,
-                        False,
-                        None,
-                        self._default_connection_added_cb,
-                        data
-                    )
-                return
-        log.error("device configuration for %s not found", iface)
-
-    def _default_connection_added_cb(self, client, result, data):
-        iface, connection_uuid = data
-        try:
-            _connection, result = client.add_connection2_finish(result)
-        except Exception as e:  # pylint: disable=broad-except
-            msg = "adding default connection {} from {} failed: {}".format(
-                connection_uuid, iface, str(e))
-            log.error(msg)
-            self.errors.append(msg)
-            self.redraw()
-        else:
-            log.debug("added default connection %s for %s: %s", connection_uuid, iface, result)
-            self._configure_connection(iface, connection_uuid)
-
-    def _configure_connection(self, iface, connection_uuid):
-        connection = self.nm_client.get_connection_by_uuid(connection_uuid)
-
-        new_spoke = ConfigureDeviceSpoke(self.data, self.storage, self.payload,
-                                         self._network_module, iface, connection)
-        ScreenHandler.push_screen_modal(new_spoke)
-
-        if new_spoke.errors:
-            self.errors.extend(new_spoke.errors)
-            self.redraw()
-            return
-
-        if new_spoke.apply_configuration:
-            self._apply = True
-            device = self.nm_client.get_device_by_iface(iface)
-            log.debug("activating connection %s with device %s",
-                      connection_uuid, iface)
-            self.nm_client.activate_connection_async(connection, device, None, None)
-
-        self._network_module.LogConfigurationState(
-            "Settings of {} updated in TUI.".format(iface)
-        )
-
-        self.redraw()
-        self.apply()
-
-    def input(self, args, key):
-        """ Handle the input. """
-        if self._container.process_user_input(key):
-            return InputState.PROCESSED
-        else:
-            return super().input(args, key)
-
-    def apply(self):
-        """Apply all of our settings."""
-        # Inform network module that device configurations might have been changed
-        # and we want to generate kickstart from device configurations
-        # (persistent NM / ifcfg configuration), instead of using original kickstart.
-        self._network_module.NetworkDeviceConfigurationChanged()
-
-        (valid, error) = network.is_valid_hostname(self.hostname, local=True)
-        if valid:
-            self._network_module.SetHostname(self.hostname)
-        else:
-            self.errors.append(_("Host name is not valid: %s") % error)
-            self.hostname = self._network_module.Hostname
-
-        if self._apply:
-            self._apply = False
-            if ANACONDA_ENVIRON in flags.environs:
-                from pyanaconda.payload.manager import payloadMgr
-                payloadMgr.restart_thread(self.payload, checkmount=False)
-
-
-class ConfigureDeviceSpoke(NormalTUISpoke):
-    """ Spoke to set various configuration options for net devices. """
-    category = "network"
-
-    def __init__(self, data, storage, payload, network_module, iface, connection):
-        super().__init__(data, storage, payload)
-        self.title = N_("Device configuration")
-
-        self._network_module = network_module
-        self._container = None
-        self._connection = connection
-        self._iface = iface
-        self._connection_uuid = connection.get_uuid()
-        self.errors = []
-        self.apply_configuration = False
-
-        self._data = WiredTUIConfigurationData()
-        self._data.set_from_connection(self._connection)
-
-        log.debug("Configure iface %s: connection %s -> %s", self._iface, self._connection_uuid,
-                  self._data)
-
-    def refresh(self, args=None):
-        """ Refresh window. """
-        super().refresh(args)
-
-        self._container = ListColumnContainer(1)
-
-        dialog = Dialog(title=(_('IPv4 address or %s for DHCP') % '"dhcp"'),
-                        conditions=[self._check_ipv4_or_dhcp])
-        self._container.add(EntryWidget(dialog.title, self._data.ip), self._set_ipv4_or_dhcp, dialog)
-
-        dialog = Dialog(title=_("IPv4 netmask"), conditions=[self._check_netmask])
-        self._container.add(EntryWidget(dialog.title, self._data.netmask), self._set_netmask, dialog)
-
-        dialog = Dialog(title=_("IPv4 gateway"), conditions=[self._check_ipv4])
-        self._container.add(EntryWidget(dialog.title, self._data.gateway), self._set_ipv4_gateway, dialog)
-
-        msg = (_('IPv6 address[/prefix] or %(auto)s for automatic, %(dhcp)s for DHCP, '
-                 '%(ignore)s to turn off')
-               % {"auto": '"auto"', "dhcp": '"dhcp"', "ignore": '"ignore"'})
-        dialog = Dialog(title=msg, conditions=[self._check_ipv6_config])
-        self._container.add(EntryWidget(dialog.title, self._data.ipv6), self._set_ipv6, dialog)
-
-        dialog = Dialog(title=_("IPv6 default gateway"), conditions=[self._check_ipv6])
-        self._container.add(EntryWidget(dialog.title, self._data.ipv6gateway), self._set_ipv6_gateway, dialog)
-
-        dialog = Dialog(title=_("Nameservers (comma separated)"), conditions=[self._check_nameservers])
-        self._container.add(EntryWidget(dialog.title, self._data.nameserver), self._set_nameservers, dialog)
-
-        msg = _("Connect automatically after reboot")
-        w = CheckboxWidget(title=msg, completed=self._data.onboot)
-        self._container.add(w, self._set_onboot_handler)
-
-        msg = _("Apply configuration in installer")
-        w = CheckboxWidget(title=msg, completed=self.apply_configuration)
-        self._container.add(w, self._set_apply_handler)
-
-        self.window.add_with_separator(self._container)
-
-        message = _("Configuring device %s.") % self._iface
-        self.window.add_with_separator(TextWidget(message))
-
-    @report_if_failed(message=IP_ERROR_MSG)
-    def _check_ipv4_or_dhcp(self, user_input, report_func):
-        return IPV4_OR_DHCP_PATTERN_WITH_ANCHORS.match(user_input) is not None
-
-    @report_if_failed(message=IP_ERROR_MSG)
-    def _check_ipv4(self, user_input, report_func):
-        return IPV4_PATTERN_WITH_ANCHORS.match(user_input) is not None
-
-    @report_if_failed(message=NETMASK_ERROR_MSG)
-    def _check_netmask(self, user_input, report_func):
-        return IPV4_NETMASK_WITH_ANCHORS.match(user_input) is not None
-
-    @report_if_failed(message=IP_ERROR_MSG)
-    def _check_ipv6(self, user_input, report_func):
-        return network.check_ip_address(user_input, version=6)
-
-    @report_if_failed(message=IP_ERROR_MSG)
-    def _check_ipv6_config(self, user_input, report_func):
-        if user_input in ["auto", "dhcp", "ignore"]:
-            return True
-        addr, _slash, prefix = user_input.partition("/")
-        if prefix:
-            try:
-                if not 1 <= int(prefix) <= 128:
-                    return False
-            except ValueError:
-                return False
-        return network.check_ip_address(addr, version=6)
-
-    @report_if_failed(message=IP_ERROR_MSG)
-    def _check_nameservers(self, user_input, report_func):
-        if user_input.strip():
-            addresses = [str.strip(i) for i in user_input.split(",")]
-            for ip in addresses:
-                if not network.check_ip_address(ip):
-                    return False
-        return True
-
-    def _set_ipv4_or_dhcp(self, dialog):
-        self._data.ip = dialog.run()
-
-    def _set_netmask(self, dialog):
-        self._data.netmask = dialog.run()
-
-    def _set_ipv4_gateway(self, dialog):
-        self._data.gateway = dialog.run()
-
-    def _set_ipv6(self, dialog):
-        self._data.ipv6 = dialog.run()
-
-    def _set_ipv6_gateway(self, dialog):
-        self._data.ipv6gateway = dialog.run()
-
-    def _set_nameservers(self, dialog):
-        self._data.nameserver = dialog.run()
-
-    def _set_apply_handler(self, args):
-        self.apply_configuration = not self.apply_configuration
-
-    def _set_onboot_handler(self, args):
-        self._data.onboot = not self._data.onboot
-
-    def input(self, args, key):
-        if self._container.process_user_input(key):
-            return InputState.PROCESSED_AND_REDRAW
-        else:
-            # TRANSLATORS: 'c' to continue
-            if key.lower() == C_('TUI|Spoke Navigation', 'c'):
-                if self._data.ip != "dhcp" and not self._data.netmask:
-                    self.errors.append(_("Configuration not saved: netmask missing in static configuration"))
-                else:
-                    self.apply()
-                return InputState.PROCESSED_AND_CLOSE
-            else:
-                return super().input(args, key)
-
-    @property
-    def indirect(self):
-        return True
-
-    def apply(self):
-        """Apply changes to NM connection."""
-        log.debug("updating connection %s:\n%s", self._connection_uuid,
-                  self._connection.to_dbus(NM.ConnectionSerializationFlags.ALL))
-
-        updated_connection = NM.SimpleConnection.new_clone(self._connection)
-        self._data.update_connection(updated_connection)
-
-        # Commit the changes
-        self._connection.update2(
-            updated_connection.to_dbus(NM.ConnectionSerializationFlags.ALL),
-            NM.SettingsUpdate2Flags.TO_DISK | NM.SettingsUpdate2Flags.BLOCK_AUTOCONNECT,
-            None,
-            None,
-            self._connection_updated_cb,
-            self._connection_uuid
-        )
-
-    def _connection_updated_cb(self, connection, result, connection_uuid):
-        connection.update2_finish(result)
-        log.debug("updated connection %s:\n%s", connection_uuid,
-                  connection.to_dbus(NM.ConnectionSerializationFlags.ALL))
-
-
-def get_default_connection(iface, device_type):
-    """Get default connection to be edited by the UI."""
-    connection = NM.SimpleConnection.new()
-    s_con = NM.SettingConnection.new()
-    s_con.props.uuid = NM.utils_uuid_generate()
-    s_con.props.autoconnect = True
-    s_con.props.id = iface
-    s_con.props.interface_name = iface
-    if device_type == NM.DeviceType.ETHERNET:
-        s_con.props.type = "802-3-ethernet"
-        s_wired = NM.SettingWired.new()
-        connection.add_setting(s_wired)
-    elif device_type == NM.DeviceType.INFINIBAND:
-        s_con.props.type = "infiniband"
-        s_ib = NM.SettingInfiniband.new()
-        s_ib.props.transport_mode = "datagram"
-        connection.add_setting(s_ib)
-    connection.add_setting(s_con)
-    return connection
-- 
2.25.1

